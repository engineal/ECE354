#include "IP_layer.h"
#include "helper.h"

// Takes a full IPFrame struct and stores it into
// output, ready for transmission.
int IPPack(IPFrame* frame, unsigned char* output)
{
    //store version & headerLength in byte 0
    output[0] = ((version & 0xF))<<4)
}

// Takes char* input which holds transmitted packet and interprets it,
// storing the result in an IPFrame struct.
int IPUnpack(unsigned char* input, int inputLength, IPFrame* frame)
{

}

// Generates IP header checksum for frame and stores it in 
// checksum field in struct.
// "The checksum field is the 16-bit one's complement of the one's 
// complement sum of all 16-bit words in the header. 
// For purposes of computing the checksum, the value of the checksum 
// field is zero."
void generateIPChecksum(IPFrame* frame)
{
    
}