<?xml version="1.0" encoding="UTF-8"?><EnsembleReport
  name="system_0"
  kind="com_altera_sopcmodel_ensemble_Ensemble"
  version="8.1">
  <!-- Format version 8.1 163 (Future versions may contain additional information.) -->
  <!-- 2011.06.07.22:46:20 -->
  <!-- A collection of modules and connections -->
  <parameter name="deviceFamily">
    <type>com.altera.entityinterfaces.moduleext.IDeviceFamily$EDeviceFamily</type>
    <value>CYCLONEII</value>
    <derived>false</derived>
    <enabled>true</enabled>
    <visible>true</visible>
    <valid>true</valid>
  </parameter>
  <parameter name="generateLegacySim">
    <type>boolean</type>
    <value>false</value>
    <derived>false</derived>
    <enabled>true</enabled>
    <visible>true</visible>
    <valid>true</valid>
  </parameter>
  <parameter name="hardcopyCompatible">
    <type>boolean</type>
    <value>false</value>
    <derived>false</derived>
    <enabled>true</enabled>
    <visible>true</visible>
    <valid>true</valid>
  </parameter>
  <parameter name="hdlLanguage">
    <type>com.altera.entityinterfaces.moduleext.IModuleGenerateHDL$HDLLanguage</type>
    <value>VERILOG</value>
    <derived>false</derived>
    <enabled>true</enabled>
    <visible>true</visible>
    <valid>true</valid>
  </parameter>
  <parameter name="projectName">
    <type>java.lang.String</type>
    <value>DE2_NIOS_HOST_MOUSE_VGA.qpf</value>
    <derived>false</derived>
    <enabled>true</enabled>
    <visible>true</visible>
    <valid>true</valid>
  </parameter>
  <parameter name="systemHash">
    <type>long</type>
    <value>1254339206</value>
    <derived>false</derived>
    <enabled>true</enabled>
    <visible>true</visible>
    <valid>true</valid>
  </parameter>
  <parameter name="timeStamp">
    <type>long</type>
    <value>1307501172853</value>
    <derived>false</derived>
    <enabled>true</enabled>
    <visible>true</visible>
    <valid>true</valid>
  </parameter>
  <module name="clk" kind="clock_source" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <parameter name="clockFrequency">
      <type>long</type>
      <value>100000000</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="clockFrequencyKnown">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_source" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>true</isStart>
      <port>
        <name>clk_out</name>
        <direction>Output</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n_out</name>
        <direction>Output</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>cpu_0</moduleName>
        <slaveName>clk</slaveName>
        <name>cpu_0.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>tri_state_bridge_0</moduleName>
        <slaveName>clk</slaveName>
        <name>tri_state_bridge_0.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>cfi_flash_0</moduleName>
        <slaveName>clk</slaveName>
        <name>cfi_flash_0.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>epcs_controller</moduleName>
        <slaveName>clk</slaveName>
        <name>epcs_controller.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>jtag_uart</moduleName>
        <slaveName>clk</slaveName>
        <name>jtag_uart.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>uart</moduleName>
        <slaveName>clk</slaveName>
        <name>uart.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>timer_0</moduleName>
        <slaveName>clk</slaveName>
        <name>timer_0.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>timer_1</moduleName>
        <slaveName>clk</slaveName>
        <name>timer_1.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>lcd</moduleName>
        <slaveName>clk</slaveName>
        <name>lcd.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>led_red</moduleName>
        <slaveName>clk</slaveName>
        <name>led_red.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>led_green</moduleName>
        <slaveName>clk</slaveName>
        <name>led_green.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>button_pio</moduleName>
        <slaveName>clk</slaveName>
        <name>button_pio.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>switch_pio</moduleName>
        <slaveName>clk</slaveName>
        <name>switch_pio.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>ssram</moduleName>
        <slaveName>clk</slaveName>
        <name>ssram.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>DM9000A</moduleName>
        <slaveName>clk</slaveName>
        <name>DM9000A.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>ISP1362</moduleName>
        <slaveName>clk</slaveName>
        <name>ISP1362.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>VGA_0</moduleName>
        <slaveName>clk</slaveName>
        <name>VGA_0.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>Audio_0</moduleName>
        <slaveName>clk</slaveName>
        <name>Audio_0.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>SD_DAT</moduleName>
        <slaveName>clk</slaveName>
        <name>SD_DAT.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>SD_CMD</moduleName>
        <slaveName>clk</slaveName>
        <name>SD_CMD.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>SD_CLK</moduleName>
        <slaveName>clk</slaveName>
        <name>SD_CLK.clk</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>camera</moduleName>
        <slaveName>s1_clock_reset</slaveName>
        <name>camera.s1_clock_reset</name>
      </clockDomainMember>
      <clockDomainMember>
        <isBridge>false</isBridge>
        <moduleName>camera</moduleName>
        <slaveName>s1_clock</slaveName>
        <name>camera.s1_clock</name>
      </clockDomainMember>
    </interface>
  </module>
  <module name="clk_50" kind="clock_source" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <parameter name="clockFrequency">
      <type>long</type>
      <value>50000000</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="clockFrequencyKnown">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_source" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>50000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>true</isStart>
      <port>
        <name>clk_out</name>
        <direction>Output</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n_out</name>
        <direction>Output</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
  </module>
  <module name="cpu_0" kind="altera_nios2" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.configuration.cpuArchitecture</name>
      <value>Nios II</value>
    </assignment>
    <assignment>
      <name>embeddedsw.configuration.HDLSimCachesCleared</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.CPU_IMPLEMENTATION</name>
      <value>"small"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.ICACHE_LINE_SIZE</name>
      <value>32</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.ICACHE_LINE_SIZE_LOG2</name>
      <value>5</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.ICACHE_SIZE</name>
      <value>1024</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DCACHE_LINE_SIZE</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DCACHE_LINE_SIZE_LOG2</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DCACHE_SIZE</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FLUSHDA_SUPPORTED</name>
      <value></value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_JMPI_INSTRUCTION</name>
      <value></value>
    </assignment>
    <assignment>
      <name>embeddedsw.configuration.resetSlave</name>
      <value>ssram.avalon_slave_0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.configuration.resetOffset</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.configuration.exceptionSlave</name>
      <value>ssram.avalon_slave_0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.configuration.exceptionOffset</name>
      <value>32</value>
    </assignment>
    <assignment>
      <name>embeddedsw.configuration.breakSlave</name>
      <value>cpu_0.jtag_debug_module</value>
    </assignment>
    <assignment>
      <name>embeddedsw.configuration.breakOffset</name>
      <value>32</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.EXCEPTION_ADDR</name>
      <value>0x600020</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.RESET_ADDR</name>
      <value>0x600000</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.BREAK_ADDR</name>
      <value>0x680020</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_DEBUG_STUB</name>
      <value></value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_DEBUG_CORE</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.CPU_ID_SIZE</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.CPU_ID_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HARDWARE_DIVIDE_PRESENT</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HARDWARE_MULTIPLY_PRESENT</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HARDWARE_MULX_PRESENT</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.INST_ADDR_WIDTH</name>
      <value>23</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DATA_ADDR_WIDTH</name>
      <value>23</value>
    </assignment>
    <parameter name="userDefinedSettings">
      <type>java.lang.String</type>
      <value></value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_showUnpublishedSettings">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_showInternalSettings">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_preciseSlaveAccessErrorException">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_preciseIllegalMemAccessException">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_preciseDivisionErrorException">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_performanceCounter">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_perfCounterWidth">
      <type>com.altera.nios2.components.Nios2InternalSettings$OptPerfCounterWidth</type>
      <value>_32</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_illegalMemAccessDetection">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_illegalInstructionsTrap">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_fullWaveformSignals">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_extraExceptionInfo">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_exportPCB">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_debugSimGen">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_clearXBitsLDNonBypass">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_branchPredictionType">
      <type>com.altera.nios2.components.Nios2InternalSettings$OptBranchPredictionType</type>
      <value>Dynamic</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_bit31BypassDCache">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_bhtPtrSz">
      <type>com.altera.nios2.components.Nios2InternalSettings$OptBhtPtrSz</type>
      <value>_8</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_bhtIndexPcOnly">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_avalonDebugPortPresent">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_alwaysEncrypt">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_allowFullAddressRange">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_activateTrace">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_activateTestEndChecker">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_activateMonitors">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_activateModelChecker">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_HDLSimCachesCleared">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setting_HBreakTest">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="resetSlave">
      <type>com.altera.entityinterfaces.IConnectionPoint</type>
      <value>ssram.avalon_slave_0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="resetOffset">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="muldiv_multiplierType">
      <type>com.altera.nios2.components.Nios2MultiplierDivider$OptMultiplier</type>
      <value>EmbeddedMulFast</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="muldiv_divider">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mpu_useLimit">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mpu_numOfInstRegion">
      <type>int</type>
      <value>8</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mpu_numOfDataRegion">
      <type>int</type>
      <value>8</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mpu_minInstRegionSize">
      <type>com.altera.nios2.components.Nios2MPU$OptRegionSize</type>
      <value>_12</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mpu_minDataRegionSize">
      <type>com.altera.nios2.components.Nios2MPU$OptRegionSize</type>
      <value>_12</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mpu_enabled">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mmu_uitlbNumEntries">
      <type>com.altera.nios2.components.Nios2MMU$OptTlbNumEntries</type>
      <value>_4</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mmu_udtlbNumEntries">
      <type>com.altera.nios2.components.Nios2MMU$OptTlbNumEntries</type>
      <value>_6</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mmu_tlbPtrSz">
      <type>com.altera.nios2.components.Nios2MMU$OptTlbPtrSz</type>
      <value>_7</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mmu_tlbNumWays">
      <type>com.altera.nios2.components.Nios2MMU$OptTlbNumWays</type>
      <value>_16</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mmu_processIDNumBits">
      <type>com.altera.nios2.components.Nios2MMU$OptProcessIDNumBits</type>
      <value>_10</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mmu_enabled">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mmu_autoAssignTlbPtrSz">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mmu_TLBMissExcSlave">
      <type>com.altera.entityinterfaces.IConnectionPoint</type>
      <value></value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="mmu_TLBMissExcOffset">
      <type>int</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="manuallyAssignCpuID">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="impl">
      <type>com.altera.nios2.components.INios2Component$Impl</type>
      <value>Small</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="icache_size">
      <type>com.altera.nios2.components.Nios2AbstractCache$OptBytes</type>
      <value>_1024</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="icache_ramBlockType">
      <type>com.altera.nios2.components.Nios2AbstractCache$OptRamBlockType</type>
      <value>Automatic</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="icache_numTCIM">
      <type>com.altera.nios2.components.Nios2AbstractCache$OptNumTCM</type>
      <value>_0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="icache_burstType">
      <type>com.altera.nios2.components.Nios2ICache$OptBurstType</type>
      <value>None</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="exceptionSlave">
      <type>com.altera.entityinterfaces.IConnectionPoint</type>
      <value>ssram.avalon_slave_0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="exceptionOffset">
      <type>long</type>
      <value>32</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="debug_triggerArming">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="debug_level">
      <type>com.altera.nios2.components.Nios2Debug$OptLevel</type>
      <value>Level1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="debug_jtagInstanceID">
      <type>int</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="debug_embeddedPLL">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="debug_debugReqSignals">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="debug_assignJtagInstanceID">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="debug_OCIOnchipTrace">
      <type>com.altera.nios2.components.Nios2Debug$OptOCIOnchipTrace</type>
      <value>_128</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="dcache_size">
      <type>com.altera.nios2.components.Nios2AbstractCache$OptBytes</type>
      <value>_2048</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="dcache_ramBlockType">
      <type>com.altera.nios2.components.Nios2AbstractCache$OptRamBlockType</type>
      <value>Automatic</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="dcache_omitDataMaster">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="dcache_numTCDM">
      <type>com.altera.nios2.components.Nios2AbstractCache$OptNumTCM</type>
      <value>_0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="dcache_lineSize">
      <type>com.altera.nios2.components.Nios2DCache$OptLineSize</type>
      <value>_4</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="dcache_bursts">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="cpuReset">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="cpuID">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="breakSlave">
      <type>com.altera.entityinterfaces.IConnectionPoint</type>
      <value>cpu_0.jtag_debug_module</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="breakOffset">
      <type>long</type>
      <value>32</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="instruction_master" kind="avalon_master" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="adaptsTo">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="dBSBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="doStreamReads">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="doStreamWrites">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isAsynchronous">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isReadable">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isWriteable">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maxAddressWidth">
        <type>int</type>
        <value>32</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>true</isStart>
      <port>
        <name>i_address</name>
        <direction>Output</direction>
        <width>23</width>
        <role>address</role>
      </port>
      <port>
        <name>i_read</name>
        <direction>Output</direction>
        <width>1</width>
        <role>read</role>
      </port>
      <port>
        <name>i_readdata</name>
        <direction>Input</direction>
        <width>32</width>
        <role>readdata</role>
      </port>
      <port>
        <name>i_readdatavalid</name>
        <direction>Input</direction>
        <width>1</width>
        <role>readdatavalid</role>
      </port>
      <port>
        <name>i_waitrequest</name>
        <direction>Input</direction>
        <width>1</width>
        <role>waitrequest</role>
      </port>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>cpu_0</moduleName>
        <slaveName>jtag_debug_module</slaveName>
        <name>cpu_0.jtag_debug_module</name>
        <baseAddress>6815744</baseAddress>
        <span>2048</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>cfi_flash_0</moduleName>
        <slaveName>s1</slaveName>
        <name>cfi_flash_0.s1</name>
        <baseAddress>0</baseAddress>
        <span>4194304</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>epcs_controller</moduleName>
        <slaveName>epcs_control_port</slaveName>
        <name>epcs_controller.epcs_control_port</name>
        <baseAddress>6817792</baseAddress>
        <span>2048</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>ssram</moduleName>
        <slaveName>avalon_slave_0</slaveName>
        <name>ssram.avalon_slave_0</name>
        <baseAddress>6291456</baseAddress>
        <span>524288</span>
      </memoryBlock>
    </interface>
    <interface name="data_master" kind="avalon_master" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="adaptsTo">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="dBSBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="doStreamReads">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="doStreamWrites">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isAsynchronous">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isReadable">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isWriteable">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maxAddressWidth">
        <type>int</type>
        <value>32</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>true</isStart>
      <port>
        <name>d_address</name>
        <direction>Output</direction>
        <width>23</width>
        <role>address</role>
      </port>
      <port>
        <name>d_byteenable</name>
        <direction>Output</direction>
        <width>4</width>
        <role>byteenable</role>
      </port>
      <port>
        <name>d_read</name>
        <direction>Output</direction>
        <width>1</width>
        <role>read</role>
      </port>
      <port>
        <name>d_readdata</name>
        <direction>Input</direction>
        <width>32</width>
        <role>readdata</role>
      </port>
      <port>
        <name>d_readdatavalid</name>
        <direction>Input</direction>
        <width>1</width>
        <role>readdatavalid</role>
      </port>
      <port>
        <name>d_waitrequest</name>
        <direction>Input</direction>
        <width>1</width>
        <role>waitrequest</role>
      </port>
      <port>
        <name>d_write</name>
        <direction>Output</direction>
        <width>1</width>
        <role>write</role>
      </port>
      <port>
        <name>d_writedata</name>
        <direction>Output</direction>
        <width>32</width>
        <role>writedata</role>
      </port>
      <port>
        <name>jtag_debug_module_debugaccess_to_roms</name>
        <direction>Output</direction>
        <width>1</width>
        <role>debugaccess</role>
      </port>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>cpu_0</moduleName>
        <slaveName>jtag_debug_module</slaveName>
        <name>cpu_0.jtag_debug_module</name>
        <baseAddress>6815744</baseAddress>
        <span>2048</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>cfi_flash_0</moduleName>
        <slaveName>s1</slaveName>
        <name>cfi_flash_0.s1</name>
        <baseAddress>0</baseAddress>
        <span>4194304</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>epcs_controller</moduleName>
        <slaveName>epcs_control_port</slaveName>
        <name>epcs_controller.epcs_control_port</name>
        <baseAddress>6817792</baseAddress>
        <span>2048</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>jtag_uart</moduleName>
        <slaveName>avalon_jtag_slave</slaveName>
        <name>jtag_uart.avalon_jtag_slave</name>
        <baseAddress>6820080</baseAddress>
        <span>8</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>uart</moduleName>
        <slaveName>s1</slaveName>
        <name>uart.s1</name>
        <baseAddress>6819840</baseAddress>
        <span>32</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>timer_0</moduleName>
        <slaveName>s1</slaveName>
        <name>timer_0.s1</name>
        <baseAddress>6819872</baseAddress>
        <span>32</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>timer_1</moduleName>
        <slaveName>s1</slaveName>
        <name>timer_1.s1</name>
        <baseAddress>6819904</baseAddress>
        <span>32</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>lcd</moduleName>
        <slaveName>control_slave</slaveName>
        <name>lcd.control_slave</name>
        <baseAddress>6819936</baseAddress>
        <span>16</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>led_red</moduleName>
        <slaveName>s1</slaveName>
        <name>led_red.s1</name>
        <baseAddress>6819952</baseAddress>
        <span>16</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>led_green</moduleName>
        <slaveName>s1</slaveName>
        <name>led_green.s1</name>
        <baseAddress>6819968</baseAddress>
        <span>16</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>button_pio</moduleName>
        <slaveName>s1</slaveName>
        <name>button_pio.s1</name>
        <baseAddress>6819984</baseAddress>
        <span>16</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>switch_pio</moduleName>
        <slaveName>s1</slaveName>
        <name>switch_pio.s1</name>
        <baseAddress>6820000</baseAddress>
        <span>16</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>ssram</moduleName>
        <slaveName>avalon_slave_0</slaveName>
        <name>ssram.avalon_slave_0</name>
        <baseAddress>6291456</baseAddress>
        <span>524288</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>DM9000A</moduleName>
        <slaveName>avalon_slave_0</slaveName>
        <name>DM9000A.avalon_slave_0</name>
        <baseAddress>6820088</baseAddress>
        <span>8</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>ISP1362</moduleName>
        <slaveName>avalon_slave_0</slaveName>
        <name>ISP1362.avalon_slave_0</name>
        <baseAddress>6820016</baseAddress>
        <span>16</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>VGA_0</moduleName>
        <slaveName>avalon_slave_0</slaveName>
        <name>VGA_0.avalon_slave_0</name>
        <baseAddress>4194304</baseAddress>
        <span>2097152</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>Audio_0</moduleName>
        <slaveName>avalon_slave_0</slaveName>
        <name>Audio_0.avalon_slave_0</name>
        <baseAddress>6820100</baseAddress>
        <span>4</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>SD_DAT</moduleName>
        <slaveName>s1</slaveName>
        <name>SD_DAT.s1</name>
        <baseAddress>6820032</baseAddress>
        <span>16</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>SD_CMD</moduleName>
        <slaveName>s1</slaveName>
        <name>SD_CMD.s1</name>
        <baseAddress>6820048</baseAddress>
        <span>16</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>SD_CLK</moduleName>
        <slaveName>s1</slaveName>
        <name>SD_CLK.s1</name>
        <baseAddress>6820064</baseAddress>
        <span>16</span>
      </memoryBlock>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>camera</moduleName>
        <slaveName>s1</slaveName>
        <name>camera.s1</name>
        <baseAddress>6820112</baseAddress>
        <span>16</span>
      </memoryBlock>
    </interface>
    <interface name="d_irq" kind="interrupt_receiver" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="associatedAddressablePoint">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value>cpu_0.data_master</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="irqScheme">
        <type>com.altera.sopcmodel.interrupt.InterruptConnectionPoint$EIrqScheme</type>
        <value>INDIVIDUAL_REQUESTS</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>interrupt</type>
      <isStart>true</isStart>
      <port>
        <name>d_irq</name>
        <direction>Input</direction>
        <width>32</width>
        <role>irq</role>
      </port>
      <interrupt>
        <isBridge>false</isBridge>
        <moduleName>epcs_controller</moduleName>
        <slaveName>irq</slaveName>
        <name>epcs_controller.irq</name>
        <interruptNumber>0</interruptNumber>
      </interrupt>
      <interrupt>
        <isBridge>false</isBridge>
        <moduleName>jtag_uart</moduleName>
        <slaveName>irq</slaveName>
        <name>jtag_uart.irq</name>
        <interruptNumber>1</interruptNumber>
      </interrupt>
      <interrupt>
        <isBridge>false</isBridge>
        <moduleName>uart</moduleName>
        <slaveName>irq</slaveName>
        <name>uart.irq</name>
        <interruptNumber>2</interruptNumber>
      </interrupt>
      <interrupt>
        <isBridge>false</isBridge>
        <moduleName>timer_0</moduleName>
        <slaveName>irq</slaveName>
        <name>timer_0.irq</name>
        <interruptNumber>3</interruptNumber>
      </interrupt>
      <interrupt>
        <isBridge>false</isBridge>
        <moduleName>timer_1</moduleName>
        <slaveName>irq</slaveName>
        <name>timer_1.irq</name>
        <interruptNumber>4</interruptNumber>
      </interrupt>
      <interrupt>
        <isBridge>false</isBridge>
        <moduleName>button_pio</moduleName>
        <slaveName>irq</slaveName>
        <name>button_pio.irq</name>
        <interruptNumber>5</interruptNumber>
      </interrupt>
      <interrupt>
        <isBridge>false</isBridge>
        <moduleName>DM9000A</moduleName>
        <slaveName>avalon_slave_0_irq</slaveName>
        <name>DM9000A.avalon_slave_0_irq</name>
        <interruptNumber>6</interruptNumber>
      </interrupt>
      <interrupt>
        <isBridge>false</isBridge>
        <moduleName>ISP1362</moduleName>
        <slaveName>avalon_slave_0_irq</slaveName>
        <name>ISP1362.avalon_slave_0_irq</name>
        <interruptNumber>7</interruptNumber>
      </interrupt>
      <interrupt>
        <isBridge>false</isBridge>
        <moduleName>ISP1362</moduleName>
        <slaveName>avalon_slave_1_irq</slaveName>
        <name>ISP1362.avalon_slave_1_irq</name>
        <interruptNumber>8</interruptNumber>
      </interrupt>
    </interface>
    <interface name="jtag_debug_module" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isMemoryDevice</name>
        <value>1</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.hideDevice</name>
        <value>1</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>DYNAMIC</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>2048</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>jtag_debug_module_address</name>
        <direction>Input</direction>
        <width>9</width>
        <role>address</role>
      </port>
      <port>
        <name>jtag_debug_module_begintransfer</name>
        <direction>Input</direction>
        <width>1</width>
        <role>begintransfer</role>
      </port>
      <port>
        <name>jtag_debug_module_byteenable</name>
        <direction>Input</direction>
        <width>4</width>
        <role>byteenable</role>
      </port>
      <port>
        <name>jtag_debug_module_clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>jtag_debug_module_debugaccess</name>
        <direction>Input</direction>
        <width>1</width>
        <role>debugaccess</role>
      </port>
      <port>
        <name>jtag_debug_module_readdata</name>
        <direction>Output</direction>
        <width>32</width>
        <role>readdata</role>
      </port>
      <port>
        <name>jtag_debug_module_reset</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset</role>
      </port>
      <port>
        <name>jtag_debug_module_resetrequest</name>
        <direction>Output</direction>
        <width>1</width>
        <role>resetrequest</role>
      </port>
      <port>
        <name>jtag_debug_module_select</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
      <port>
        <name>jtag_debug_module_write</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write</role>
      </port>
      <port>
        <name>jtag_debug_module_writedata</name>
        <direction>Input</direction>
        <width>32</width>
        <role>writedata</role>
      </port>
    </interface>
    <interface
          name="custom_instruction_master"
          kind="nios_custom_instruction_master"
          version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="CIName">
        <type>java.lang.String</type>
        <value></value>
        <derived>true</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressWidth">
        <type>int</type>
        <value>8</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="enabled">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maxAddressWidth">
        <type>int</type>
        <value>8</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="opcodeExtension">
        <type>int</type>
        <value>0</value>
        <derived>true</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>nios_custom_instruction</type>
      <isStart>true</isStart>
      <port>
        <name>dataa</name>
        <direction>Output</direction>
        <width>32</width>
        <role>dataa</role>
      </port>
      <port>
        <name>datab</name>
        <direction>Output</direction>
        <width>32</width>
        <role>datab</role>
      </port>
      <port>
        <name>result</name>
        <direction>Input</direction>
        <width>32</width>
        <role>result</role>
      </port>
      <port>
        <name>clk_en</name>
        <direction>Output</direction>
        <width>1</width>
        <role>clk_en</role>
      </port>
      <port>
        <name>reset</name>
        <direction>Output</direction>
        <width>1</width>
        <role>reset</role>
      </port>
      <port>
        <name>start</name>
        <direction>Output</direction>
        <width>1</width>
        <role>start</role>
      </port>
      <port>
        <name>done</name>
        <direction>Input</direction>
        <width>1</width>
        <role>done</role>
      </port>
      <port>
        <name>n</name>
        <direction>Output</direction>
        <width>8</width>
        <role>n</role>
      </port>
      <port>
        <name>a</name>
        <direction>Output</direction>
        <width>5</width>
        <role>a</role>
      </port>
      <port>
        <name>b</name>
        <direction>Output</direction>
        <width>5</width>
        <role>b</role>
      </port>
      <port>
        <name>c</name>
        <direction>Output</direction>
        <width>5</width>
        <role>c</role>
      </port>
      <port>
        <name>readra</name>
        <direction>Output</direction>
        <width>1</width>
        <role>readra</role>
      </port>
      <port>
        <name>readrb</name>
        <direction>Output</direction>
        <width>1</width>
        <role>readrb</role>
      </port>
      <port>
        <name>writerc</name>
        <direction>Output</direction>
        <width>1</width>
        <role>writerc</role>
      </port>
    </interface>
  </module>
  <module
      name="tri_state_bridge_0"
      kind="altera_avalon_tri_state_bridge"
      version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <parameter name="registerIncomingSignals">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
    </interface>
    <interface name="avalon_slave" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>DYNAMIC</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value>tri_state_bridge_0.tristate_master</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
    </interface>
    <interface name="tristate_master" kind="avalon_tristate_master" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="adaptsTo">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="dBSBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isAsynchronous">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isReadable">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isWriteable">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maxAddressWidth">
        <type>int</type>
        <value>32</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon_tristate</type>
      <isStart>true</isStart>
      <memoryBlock>
        <isBridge>false</isBridge>
        <moduleName>cfi_flash_0</moduleName>
        <slaveName>s1</slaveName>
        <name>cfi_flash_0.s1</name>
        <baseAddress>0</baseAddress>
        <span>4194304</span>
      </memoryBlock>
    </interface>
  </module>
  <module name="cfi_flash_0" kind="altera_avalon_cfi_flash" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.SETUP_VALUE</name>
      <value>40</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.WAIT_VALUE</name>
      <value>160</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HOLD_VALUE</name>
      <value>40</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.TIMING_UNITS</name>
      <value>"ns"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.SIZE</name>
      <value>4194304u</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.MEM_INIT_DATA_WIDTH</name>
      <value>8</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.HAS_BYTE_LANE</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.IS_FLASH</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.GENERATE_DAT_SYM</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.GENERATE_FLASH</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.DAT_SYM_INSTALL_DIR</name>
      <value>SIM_DIR</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.FLASH_INSTALL_DIR</name>
      <value>APP_DIR</value>
    </assignment>
    <parameter name="actualHoldTime">
      <type>double</type>
      <value>40.0</value>
      <derived>true</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="actualSetupTime">
      <type>double</type>
      <value>40.0</value>
      <derived>true</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="actualWaitTime">
      <type>double</type>
      <value>160.0</value>
      <derived>true</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="addressWidth">
      <type>int</type>
      <value>22</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="corePreset">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonCommonFlashInterface.FlashCorePresets</type>
      <value>CUSTOM</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="dataWidth">
      <type>int</type>
      <value>8</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="holdTime">
      <type>int</type>
      <value>40</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="setupTime">
      <type>int</type>
      <value>40</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="sharedPorts">
      <type>[Ljava.lang.String;</type>
      <value>s1/data,s1/address,s1/read_n</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="timingUnits">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonCommonFlashInterface.FlashTimingUnits</type>
      <value>NS</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="waitTime">
      <type>int</type>
      <value>160</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
    </interface>
    <interface name="s1" kind="avalon_tristate_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isNonVolatileStorage</name>
        <value>1</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isFlash</name>
        <value>1</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isMemoryDevice</name>
        <value>1</value>
      </assignment>
      <parameter name="activeCSThroughReadLatency">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>DYNAMIC</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>4194304</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>40</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>160</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>160</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>40</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Nanoseconds</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>160</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>160</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon_tristate</type>
      <isStart>false</isStart>
      <port>
        <name>data</name>
        <direction>Bidir</direction>
        <width>8</width>
        <role>data</role>
      </port>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>22</width>
        <role>address</role>
      </port>
      <port>
        <name>read_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>read_n</role>
      </port>
      <port>
        <name>write_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>select_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect_n</role>
      </port>
    </interface>
  </module>
  <module
      name="epcs_controller"
      kind="altera_avalon_epcs_flash_controller"
      version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.REGISTER_OFFSET</name>
      <value>512</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.MEM_INIT_DATA_WIDTH</name>
      <value>32</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.MEM_INIT_FILENAME</name>
      <value>epcs_controller_boot_rom</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.IS_EPCS</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.IS_FLASH</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.GENERATE_HEX</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.GENERATE_DAT_SYM</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.GENERATE_FLASH</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.HEX_INSTALL_DIR</name>
      <value>SIM_DIR</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.DAT_SYM_INSTALL_DIR</name>
      <value>SIM_DIR</value>
    </assignment>
    <assignment>
      <name>embeddedsw.memoryInfo.FLASH_INSTALL_DIR</name>
      <value>APP_DIR</value>
    </assignment>
    <parameter name="autoSelectASMIAtom">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="useASMIAtom">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="epcs_control_port" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isNonVolatileStorage</name>
        <value>1</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isFlash</name>
        <value>1</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isMemoryDevice</name>
        <value>1</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>DYNAMIC</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>2048</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>9</width>
        <role>address</role>
      </port>
      <port>
        <name>chipselect</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
      <port>
        <name>dataavailable</name>
        <direction>Output</direction>
        <width>1</width>
        <role>dataavailable</role>
      </port>
      <port>
        <name>endofpacket</name>
        <direction>Output</direction>
        <width>1</width>
        <role>endofpacket</role>
      </port>
      <port>
        <name>read_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>read_n</role>
      </port>
      <port>
        <name>readdata</name>
        <direction>Output</direction>
        <width>32</width>
        <role>readdata</role>
      </port>
      <port>
        <name>readyfordata</name>
        <direction>Output</direction>
        <width>1</width>
        <role>readyfordata</role>
      </port>
      <port>
        <name>write_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>writedata</name>
        <direction>Input</direction>
        <width>32</width>
        <role>writedata</role>
      </port>
    </interface>
    <interface name="irq" kind="interrupt_sender" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="associatedAddressablePoint">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value>epcs_controller.epcs_control_port</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="irqScheme">
        <type>com.altera.sopcmodel.interrupt.InterruptConnectionPoint$EIrqScheme</type>
        <value>NONE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>interrupt</type>
      <isStart>false</isStart>
      <port>
        <name>irq</name>
        <direction>Output</direction>
        <width>1</width>
        <role>irq</role>
      </port>
    </interface>
  </module>
  <module name="jtag_uart" kind="altera_avalon_jtag_uart" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.WRITE_DEPTH</name>
      <value>64</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.READ_DEPTH</name>
      <value>64</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.WRITE_THRESHOLD</name>
      <value>8</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.READ_THRESHOLD</name>
      <value>8</value>
    </assignment>
    <parameter name="allowMultipleConnections">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>false</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="hubInstanceID">
      <type>int</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="readBufferDepth">
      <type>int</type>
      <value>64</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="readIRQThreshold">
      <type>int</type>
      <value>8</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simInputCharacterStream">
      <type>java.lang.String</type>
      <value></value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simInteractiveOptions">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonJtagUART.AlteraAvalonJtagUART$JtagSimulationOptions</type>
      <value>INTERACTIVE_ASCII_OUTPUT</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="useRegistersForReadBuffer">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="useRegistersForWriteBuffer">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="writeBufferDepth">
      <type>int</type>
      <value>64</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="writeIRQThreshold">
      <type>int</type>
      <value>8</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="avalon_jtag_slave" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isPrintableDevice</name>
        <value>1</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>2</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>av_chipselect</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
      <port>
        <name>av_address</name>
        <direction>Input</direction>
        <width>1</width>
        <role>address</role>
      </port>
      <port>
        <name>av_read_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>read_n</role>
      </port>
      <port>
        <name>av_readdata</name>
        <direction>Output</direction>
        <width>32</width>
        <role>readdata</role>
      </port>
      <port>
        <name>av_write_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>av_writedata</name>
        <direction>Input</direction>
        <width>32</width>
        <role>writedata</role>
      </port>
      <port>
        <name>av_waitrequest</name>
        <direction>Output</direction>
        <width>1</width>
        <role>waitrequest</role>
      </port>
      <port>
        <name>dataavailable</name>
        <direction>Output</direction>
        <width>1</width>
        <role>dataavailable</role>
      </port>
      <port>
        <name>readyfordata</name>
        <direction>Output</direction>
        <width>1</width>
        <role>readyfordata</role>
      </port>
    </interface>
    <interface name="irq" kind="interrupt_sender" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="associatedAddressablePoint">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value>jtag_uart.avalon_jtag_slave</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="irqScheme">
        <type>com.altera.sopcmodel.interrupt.InterruptConnectionPoint$EIrqScheme</type>
        <value>NONE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>interrupt</type>
      <isStart>false</isStart>
      <port>
        <name>av_irq</name>
        <direction>Output</direction>
        <width>1</width>
        <role>irq</role>
      </port>
    </interface>
  </module>
  <module name="uart" kind="altera_avalon_uart" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.BAUD</name>
      <value>115200</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DATA_BITS</name>
      <value>8</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FIXED_BAUD</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.PARITY</name>
      <value>'N'</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.STOP_BITS</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.USE_CTS_RTS</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.USE_EOP_REGISTER</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.SIM_TRUE_BAUD</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.SIM_CHAR_STREAM</name>
      <value>""</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FREQ</name>
      <value>100000000u</value>
    </assignment>
    <parameter name="baud">
      <type>int</type>
      <value>115200</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baudError">
      <type>double</type>
      <value>0.01</value>
      <derived>true</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="clockRate">
      <type>java.lang.Long</type>
      <value>100000000</value>
      <derived>true</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="dataBits">
      <type>int</type>
      <value>8</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="fixedBaud">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="parity">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonUART.AlteraAvalonUART$UartParity</type>
      <value>NONE</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simCharStream">
      <type>java.lang.String</type>
      <value></value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simInteractiveInputEnable">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simInteractiveOutputEnable">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simTrueBaud">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="stopBits">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="useCtsRts">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="useEopRegister">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="s1" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isPrintableDevice</name>
        <value>1</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>8</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>3</width>
        <role>address</role>
      </port>
      <port>
        <name>begintransfer</name>
        <direction>Input</direction>
        <width>1</width>
        <role>begintransfer</role>
      </port>
      <port>
        <name>chipselect</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
      <port>
        <name>read_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>read_n</role>
      </port>
      <port>
        <name>write_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>writedata</name>
        <direction>Input</direction>
        <width>16</width>
        <role>writedata</role>
      </port>
      <port>
        <name>readdata</name>
        <direction>Output</direction>
        <width>16</width>
        <role>readdata</role>
      </port>
      <port>
        <name>dataavailable</name>
        <direction>Output</direction>
        <width>1</width>
        <role>dataavailable</role>
      </port>
      <port>
        <name>readyfordata</name>
        <direction>Output</direction>
        <width>1</width>
        <role>readyfordata</role>
      </port>
    </interface>
    <interface name="external_connection" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>rxd</name>
        <direction>Input</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>txd</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
    </interface>
    <interface name="irq" kind="interrupt_sender" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="associatedAddressablePoint">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value>uart.s1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="irqScheme">
        <type>com.altera.sopcmodel.interrupt.InterruptConnectionPoint$EIrqScheme</type>
        <value>NONE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>interrupt</type>
      <isStart>false</isStart>
      <port>
        <name>irq</name>
        <direction>Output</direction>
        <width>1</width>
        <role>irq</role>
      </port>
    </interface>
  </module>
  <module name="timer_0" kind="altera_avalon_timer" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.ALWAYS_RUN</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FIXED_PERIOD</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.SNAPSHOT</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.PERIOD</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.PERIOD_UNITS</name>
      <value>"ms"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.RESET_OUTPUT</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.TIMEOUT_PULSE_OUTPUT</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FREQ</name>
      <value>100000000u</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.LOAD_VALUE</name>
      <value>99999ULL</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.COUNTER_SIZE</name>
      <value>32</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.MULT</name>
      <value>0.0010</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.TICKS_PER_SEC</name>
      <value>1000u</value>
    </assignment>
    <parameter name="alwaysRun">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="counterSize">
      <type>int</type>
      <value>32</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="fixedPeriod">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="period">
      <type>java.lang.String</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="periodUnits">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonTimer.AlteraAvalonTimer$TimerPeriodUnit</type>
      <value>MSEC</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="resetOutput">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="snapshot">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="timeoutPulseOutput">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="timerPreset">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonTimer.TimerPresets</type>
      <value>CUSTOM</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="s1" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isTimerDevice</name>
        <value>1</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>8</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>3</width>
        <role>address</role>
      </port>
      <port>
        <name>writedata</name>
        <direction>Input</direction>
        <width>16</width>
        <role>writedata</role>
      </port>
      <port>
        <name>readdata</name>
        <direction>Output</direction>
        <width>16</width>
        <role>readdata</role>
      </port>
      <port>
        <name>chipselect</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
      <port>
        <name>write_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
    </interface>
    <interface name="irq" kind="interrupt_sender" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="associatedAddressablePoint">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value>timer_0.s1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="irqScheme">
        <type>com.altera.sopcmodel.interrupt.InterruptConnectionPoint$EIrqScheme</type>
        <value>NONE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>interrupt</type>
      <isStart>false</isStart>
      <port>
        <name>irq</name>
        <direction>Output</direction>
        <width>1</width>
        <role>irq</role>
      </port>
    </interface>
  </module>
  <module name="timer_1" kind="altera_avalon_timer" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.ALWAYS_RUN</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FIXED_PERIOD</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.SNAPSHOT</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.PERIOD</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.PERIOD_UNITS</name>
      <value>"ms"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.RESET_OUTPUT</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.TIMEOUT_PULSE_OUTPUT</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FREQ</name>
      <value>100000000u</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.LOAD_VALUE</name>
      <value>99999ULL</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.COUNTER_SIZE</name>
      <value>32</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.MULT</name>
      <value>0.0010</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.TICKS_PER_SEC</name>
      <value>1000u</value>
    </assignment>
    <parameter name="alwaysRun">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="counterSize">
      <type>int</type>
      <value>32</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="fixedPeriod">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="period">
      <type>java.lang.String</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="periodUnits">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonTimer.AlteraAvalonTimer$TimerPeriodUnit</type>
      <value>MSEC</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="resetOutput">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="snapshot">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="timeoutPulseOutput">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="timerPreset">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonTimer.TimerPresets</type>
      <value>CUSTOM</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="s1" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isTimerDevice</name>
        <value>1</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>8</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>3</width>
        <role>address</role>
      </port>
      <port>
        <name>writedata</name>
        <direction>Input</direction>
        <width>16</width>
        <role>writedata</role>
      </port>
      <port>
        <name>readdata</name>
        <direction>Output</direction>
        <width>16</width>
        <role>readdata</role>
      </port>
      <port>
        <name>chipselect</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
      <port>
        <name>write_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
    </interface>
    <interface name="irq" kind="interrupt_sender" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="associatedAddressablePoint">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value>timer_1.s1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="irqScheme">
        <type>com.altera.sopcmodel.interrupt.InterruptConnectionPoint$EIrqScheme</type>
        <value>NONE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>interrupt</type>
      <isStart>false</isStart>
      <port>
        <name>irq</name>
        <direction>Output</direction>
        <width>1</width>
        <role>irq</role>
      </port>
    </interface>
  </module>
  <module name="lcd" kind="altera_avalon_lcd_16207" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
    </interface>
    <interface name="control_slave" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isPrintableDevice</name>
        <value>1</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>4</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>250</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>250</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>250</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>250</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Nanoseconds</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>250</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>250</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>2</width>
        <role>address</role>
      </port>
      <port>
        <name>begintransfer</name>
        <direction>Input</direction>
        <width>1</width>
        <role>begintransfer</role>
      </port>
      <port>
        <name>read</name>
        <direction>Input</direction>
        <width>1</width>
        <role>read</role>
      </port>
      <port>
        <name>readdata</name>
        <direction>Output</direction>
        <width>8</width>
        <role>readdata</role>
      </port>
      <port>
        <name>write</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write</role>
      </port>
      <port>
        <name>writedata</name>
        <direction>Input</direction>
        <width>8</width>
        <role>writedata</role>
      </port>
    </interface>
    <interface name="external" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>LCD_data</name>
        <direction>Bidir</direction>
        <width>8</width>
        <role>export</role>
      </port>
      <port>
        <name>LCD_E</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>LCD_RS</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>LCD_RW</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
    </interface>
  </module>
  <module name="led_red" kind="altera_avalon_pio" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DRIVEN_SIM_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_TRI</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_OUT</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_IN</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.CAPTURE</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DATA_WIDTH</name>
      <value>18</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.RESET_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.EDGE_TYPE</name>
      <value>"NONE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.IRQ_TYPE</name>
      <value>"NONE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FREQ</name>
      <value>100000000u</value>
    </assignment>
    <parameter name="bitClearingEdgeCapReg">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="captureEdge">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="direction">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$Direction</type>
      <value>Output</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="edgeType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$EdgeType</type>
      <value>RISING</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="generateIRQ">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="irqType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$IrqType</type>
      <value>LEVEL</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="resetValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDoTestBenchWiring">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDrivenValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="width">
      <type>int</type>
      <value>18</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="s1" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>4</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>2</width>
        <role>address</role>
      </port>
      <port>
        <name>write_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>writedata</name>
        <direction>Input</direction>
        <width>18</width>
        <role>writedata</role>
      </port>
      <port>
        <name>chipselect</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
    </interface>
    <interface name="external_connection" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>out_port</name>
        <direction>Output</direction>
        <width>18</width>
        <role>export</role>
      </port>
    </interface>
  </module>
  <module name="led_green" kind="altera_avalon_pio" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DRIVEN_SIM_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_TRI</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_OUT</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_IN</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.CAPTURE</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DATA_WIDTH</name>
      <value>9</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.RESET_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.EDGE_TYPE</name>
      <value>"NONE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.IRQ_TYPE</name>
      <value>"NONE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FREQ</name>
      <value>100000000u</value>
    </assignment>
    <parameter name="bitClearingEdgeCapReg">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="captureEdge">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="direction">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$Direction</type>
      <value>Output</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="edgeType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$EdgeType</type>
      <value>RISING</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="generateIRQ">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="irqType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$IrqType</type>
      <value>LEVEL</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="resetValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDoTestBenchWiring">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDrivenValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="width">
      <type>int</type>
      <value>9</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="s1" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>4</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>2</width>
        <role>address</role>
      </port>
      <port>
        <name>write_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>writedata</name>
        <direction>Input</direction>
        <width>9</width>
        <role>writedata</role>
      </port>
      <port>
        <name>chipselect</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
    </interface>
    <interface name="external_connection" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>out_port</name>
        <direction>Output</direction>
        <width>9</width>
        <role>export</role>
      </port>
    </interface>
  </module>
  <module name="button_pio" kind="altera_avalon_pio" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DRIVEN_SIM_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_TRI</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_OUT</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_IN</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.CAPTURE</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DATA_WIDTH</name>
      <value>4</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.RESET_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.EDGE_TYPE</name>
      <value>"FALLING"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.IRQ_TYPE</name>
      <value>"EDGE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FREQ</name>
      <value>100000000u</value>
    </assignment>
    <parameter name="bitClearingEdgeCapReg">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="captureEdge">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="direction">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$Direction</type>
      <value>Input</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="edgeType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$EdgeType</type>
      <value>FALLING</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="generateIRQ">
      <type>boolean</type>
      <value>true</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="irqType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$IrqType</type>
      <value>EDGE</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="resetValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDoTestBenchWiring">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDrivenValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="width">
      <type>int</type>
      <value>4</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="s1" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>4</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>2</width>
        <role>address</role>
      </port>
      <port>
        <name>write_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>writedata</name>
        <direction>Input</direction>
        <width>4</width>
        <role>writedata</role>
      </port>
      <port>
        <name>chipselect</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
      <port>
        <name>readdata</name>
        <direction>Output</direction>
        <width>4</width>
        <role>readdata</role>
      </port>
    </interface>
    <interface name="external_connection" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>in_port</name>
        <direction>Input</direction>
        <width>4</width>
        <role>export</role>
      </port>
    </interface>
    <interface name="irq" kind="interrupt_sender" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="associatedAddressablePoint">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value>button_pio.s1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="irqScheme">
        <type>com.altera.sopcmodel.interrupt.InterruptConnectionPoint$EIrqScheme</type>
        <value>NONE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>interrupt</type>
      <isStart>false</isStart>
      <port>
        <name>irq</name>
        <direction>Output</direction>
        <width>1</width>
        <role>irq</role>
      </port>
    </interface>
  </module>
  <module name="switch_pio" kind="altera_avalon_pio" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DRIVEN_SIM_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_TRI</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_OUT</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_IN</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.CAPTURE</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DATA_WIDTH</name>
      <value>18</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.RESET_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.EDGE_TYPE</name>
      <value>"NONE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.IRQ_TYPE</name>
      <value>"NONE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FREQ</name>
      <value>100000000u</value>
    </assignment>
    <parameter name="bitClearingEdgeCapReg">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="captureEdge">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="direction">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$Direction</type>
      <value>Input</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="edgeType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$EdgeType</type>
      <value>RISING</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="generateIRQ">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="irqType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$IrqType</type>
      <value>LEVEL</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="resetValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDoTestBenchWiring">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDrivenValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="width">
      <type>int</type>
      <value>18</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="s1" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>4</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>2</width>
        <role>address</role>
      </port>
      <port>
        <name>readdata</name>
        <direction>Output</direction>
        <width>18</width>
        <role>readdata</role>
      </port>
    </interface>
    <interface name="external_connection" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>in_port</name>
        <direction>Input</direction>
        <width>18</width>
        <role>export</role>
      </port>
    </interface>
  </module>
  <module name="ssram" kind="sram_16bit_512k" version="1.0">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <parameter name="instancePTF">
      <type>com.altera.utilities.altNode.AltNode</type>
      <value>MODULE ssram
{
   class = "sram_16bit_512k";
   class_version = "1.0";
   SYSTEM_BUILDER_INFO 
   {
      Instantiate_In_System_Module = "1";
      Has_Clock = "1";
      Top_Level_Ports_Are_Enumerated = "1";
      Is_Enabled = "1";
      Clock_Source = "clk";
      View 
      {
         MESSAGES 
         {
         }
         Is_Collapsed = "0";
      }
   }
   COMPONENT_BUILDER 
   {
      GLS_SETTINGS 
      {
      }
   }
   PORT_WIRING 
   {
      PORT iCLK
      {
         width = "1";
         width_expression = "";
         direction = "input";
         type = "clk";
         is_shared = "0";
         vhdl_record_name = "";
         vhdl_record_type = "";
      }
   }
   WIZARD_SCRIPT_ARGUMENTS 
   {
      hdl_parameters 
      {
      }
   }
   SIMULATION 
   {
      DISPLAY 
      {
      }
   }
   SLAVE avalon_slave_0
   {
      SYSTEM_BUILDER_INFO 
      {
         Bus_Type = "avalon";
         Address_Group = "1";
         Has_Clock = "0";
         Address_Width = "18";
         Address_Alignment = "dynamic";
         Data_Width = "16";
         Has_Base_Address = "1";
         Has_IRQ = "0";
         Setup_Time = "20ns";
         Hold_Time = "20ns";
         Read_Wait_States = "20ns";
         Write_Wait_States = "20ns";
         Read_Latency = "0";
         Maximum_Pending_Read_Transactions = "0";
         Active_CS_Through_Read_Latency = "0";
         Is_Printable_Device = "0";
         Is_Memory_Device = "1";
         Is_Readable = "1";
         Is_Writable = "1";
         Minimum_Uninterrupted_Run_Length = "1";
         MASTERED_BY cpu_0/instruction_master
         {
            priority = "1";
         }
         MASTERED_BY cpu_0/data_master
         {
            priority = "1";
         }
         Base_Address = "0x00600000";
         IRQ_MASTER cpu_0/data_master
         {
            IRQ_Number = "NC";
         }
      }
      COMPONENT_BUILDER 
      {
         AVS_SETTINGS 
         {
            Setup_Value = "20";
            Read_Wait_Value = "20";
            Write_Wait_Value = "20";
            Hold_Value = "20";
            Timing_Units = "ns";
            Read_Latency_Value = "0";
            Minimum_Arbitration_Shares = "1";
            Active_CS_Through_Read_Latency = "0";
            Max_Pending_Read_Transactions_Value = "1";
            Address_Alignment = "dynamic";
            Is_Printable_Device = "0";
            Interleave_Bursts = "0";
            interface_name = "Avalon Slave";
            external_wait = "0";
            Is_Memory_Device = "1";
         }
      }
      PORT_WIRING 
      {
         PORT iDATA
         {
            width = "16";
            width_expression = "";
            direction = "input";
            type = "writedata";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT oDATA
         {
            width = "16";
            width_expression = "";
            direction = "output";
            type = "readdata";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iADDR
         {
            width = "18";
            width_expression = "";
            direction = "input";
            type = "address";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iWE_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "write_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iOE_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "read_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iCE_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "chipselect_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iBE_N
         {
            width = "2";
            width_expression = "";
            direction = "input";
            type = "byteenable_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT SRAM_DQ
         {
            width = "16";
            width_expression = "";
            direction = "inout";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT SRAM_ADDR
         {
            width = "18";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT SRAM_UB_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT SRAM_LB_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT SRAM_WE_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT SRAM_CE_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT SRAM_OE_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
      }
   }
   HDL_INFO 
   {
      Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/SRAM_16Bit_512K.v, __PROJECT_DIRECTORY__/sram_0.v";
   }
}
</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="sharedPorts">
      <type>[Ljava.lang.String;</type>
      <value></value>
      <derived>true</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>iCLK</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
    </interface>
    <interface name="avalon_slave_0_export" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>SRAM_DQ</name>
        <direction>Bidir</direction>
        <width>16</width>
        <role>export</role>
      </port>
      <port>
        <name>SRAM_ADDR</name>
        <direction>Output</direction>
        <width>18</width>
        <role>export</role>
      </port>
      <port>
        <name>SRAM_UB_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>SRAM_LB_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>SRAM_WE_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>SRAM_CE_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>SRAM_OE_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
    </interface>
    <interface name="avalon_slave_0" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isMemoryDevice</name>
        <value>1</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isPrintableDevice</name>
        <value>0</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isNonVolatileStorage</name>
        <value>0</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>DYNAMIC</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>524288</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>20</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>20</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>20</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>20</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Nanoseconds</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>20</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>20</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>iDATA</name>
        <direction>Input</direction>
        <width>16</width>
        <role>writedata</role>
      </port>
      <port>
        <name>oDATA</name>
        <direction>Output</direction>
        <width>16</width>
        <role>readdata</role>
      </port>
      <port>
        <name>iADDR</name>
        <direction>Input</direction>
        <width>18</width>
        <role>address</role>
      </port>
      <port>
        <name>iWE_N</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>iOE_N</name>
        <direction>Input</direction>
        <width>1</width>
        <role>read_n</role>
      </port>
      <port>
        <name>iCE_N</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect_n</role>
      </port>
      <port>
        <name>iBE_N</name>
        <direction>Input</direction>
        <width>2</width>
        <role>byteenable_n</role>
      </port>
    </interface>
  </module>
  <module name="DM9000A" kind="dm9000a" version="1.0">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <parameter name="instancePTF">
      <type>com.altera.utilities.altNode.AltNode</type>
      <value>MODULE DM9000A
{
   class = "dm9000a";
   class_version = "1.0";
   SYSTEM_BUILDER_INFO 
   {
      Instantiate_In_System_Module = "1";
      Has_Clock = "1";
      Top_Level_Ports_Are_Enumerated = "1";
      Is_Enabled = "1";
      Clock_Source = "clk";
      View 
      {
         MESSAGES 
         {
         }
         Is_Collapsed = "1";
      }
   }
   COMPONENT_BUILDER 
   {
      GLS_SETTINGS 
      {
      }
   }
   PORT_WIRING 
   {
      PORT iCLK
      {
         width = "1";
         width_expression = "";
         direction = "input";
         type = "clk";
         is_shared = "0";
         vhdl_record_name = "";
         vhdl_record_type = "";
      }
   }
   WIZARD_SCRIPT_ARGUMENTS 
   {
      hdl_parameters 
      {
      }
   }
   SIMULATION 
   {
      DISPLAY 
      {
      }
   }
   SLAVE avalon_slave_0
   {
      SYSTEM_BUILDER_INFO 
      {
         Bus_Type = "avalon";
         Address_Group = "1";
         Has_Clock = "0";
         Address_Width = "1";
         Address_Alignment = "native";
         Data_Width = "16";
         Has_Base_Address = "1";
         Has_IRQ = "1";
         Setup_Time = "0ns";
         Hold_Time = "0ns";
         Read_Wait_States = "40ns";
         Write_Wait_States = "40ns";
         Read_Latency = "0";
         Maximum_Pending_Read_Transactions = "0";
         Active_CS_Through_Read_Latency = "1";
         Is_Printable_Device = "0";
         Is_Memory_Device = "0";
         Is_Readable = "1";
         Is_Writable = "1";
         Minimum_Uninterrupted_Run_Length = "1";
         MASTERED_BY cpu_0/data_master
         {
            priority = "1";
         }
         IRQ_MASTER cpu_0/data_master
         {
            IRQ_Number = "6";
         }
         Base_Address = "0x006810F8";
      }
      COMPONENT_BUILDER 
      {
         AVS_SETTINGS 
         {
            Setup_Value = "0";
            Read_Wait_Value = "40";
            Write_Wait_Value = "40";
            Hold_Value = "0";
            Timing_Units = "ns";
            Read_Latency_Value = "0";
            Minimum_Arbitration_Shares = "1";
            Active_CS_Through_Read_Latency = "1";
            Max_Pending_Read_Transactions_Value = "1";
            Address_Alignment = "native";
            Is_Printable_Device = "0";
            Interleave_Bursts = "0";
            interface_name = "Avalon Slave";
            external_wait = "0";
            Is_Memory_Device = "0";
         }
      }
      PORT_WIRING 
      {
         PORT iDATA
         {
            width = "16";
            width_expression = "";
            direction = "input";
            type = "writedata";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iCMD
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "address";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iRD_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "read_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iWR_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "write_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iCS_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "chipselect_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iRST_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "reset_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iOSC_50
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT oDATA
         {
            width = "16";
            width_expression = "";
            direction = "output";
            type = "readdata";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT oINT
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "irq";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT ENET_DATA
         {
            width = "16";
            width_expression = "";
            direction = "inout";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT ENET_CMD
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT ENET_RD_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT ENET_WR_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT ENET_CS_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT ENET_RST_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT ENET_CLK
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT ENET_INT
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
      }
   }
   HDL_INFO 
   {
      Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/DM9000A_IF.v, __PROJECT_DIRECTORY__/DM9000A.v";
   }
}
</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="sharedPorts">
      <type>[Ljava.lang.String;</type>
      <value></value>
      <derived>true</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>iCLK</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
    </interface>
    <interface name="avalon_slave_0_export" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>iOSC_50</name>
        <direction>Input</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>ENET_DATA</name>
        <direction>Bidir</direction>
        <width>16</width>
        <role>export</role>
      </port>
      <port>
        <name>ENET_CMD</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>ENET_RD_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>ENET_WR_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>ENET_CS_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>ENET_RST_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>ENET_CLK</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>ENET_INT</name>
        <direction>Input</direction>
        <width>1</width>
        <role>export</role>
      </port>
    </interface>
    <interface name="avalon_slave_0" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isMemoryDevice</name>
        <value>0</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isPrintableDevice</name>
        <value>0</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isNonVolatileStorage</name>
        <value>0</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>2</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>40</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>40</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Nanoseconds</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>40</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>40</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>iDATA</name>
        <direction>Input</direction>
        <width>16</width>
        <role>writedata</role>
      </port>
      <port>
        <name>iCMD</name>
        <direction>Input</direction>
        <width>1</width>
        <role>address</role>
      </port>
      <port>
        <name>iRD_N</name>
        <direction>Input</direction>
        <width>1</width>
        <role>read_n</role>
      </port>
      <port>
        <name>iWR_N</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>iCS_N</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect_n</role>
      </port>
      <port>
        <name>oDATA</name>
        <direction>Output</direction>
        <width>16</width>
        <role>readdata</role>
      </port>
    </interface>
    <interface name="avalon_slave_0_irq" kind="interrupt_sender" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="associatedAddressablePoint">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value>DM9000A.avalon_slave_0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="irqScheme">
        <type>com.altera.sopcmodel.interrupt.InterruptConnectionPoint$EIrqScheme</type>
        <value>NONE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>interrupt</type>
      <isStart>false</isStart>
      <port>
        <name>oINT</name>
        <direction>Output</direction>
        <width>1</width>
        <role>irq</role>
      </port>
    </interface>
  </module>
  <module name="ISP1362" kind="isp1362" version="1.0">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <parameter name="instancePTF">
      <type>com.altera.utilities.altNode.AltNode</type>
      <value>MODULE ISP1362
{
   class = "isp1362";
   class_version = "1.0";
   SYSTEM_BUILDER_INFO 
   {
      Instantiate_In_System_Module = "1";
      Has_Clock = "1";
      Top_Level_Ports_Are_Enumerated = "1";
      Is_Enabled = "1";
      Clock_Source = "clk";
      View 
      {
         MESSAGES 
         {
         }
         Is_Collapsed = "1";
      }
   }
   COMPONENT_BUILDER 
   {
      GLS_SETTINGS 
      {
      }
   }
   PORT_WIRING 
   {
      PORT iCLK
      {
         width = "1";
         width_expression = "";
         direction = "input";
         type = "clk";
         is_shared = "0";
         vhdl_record_name = "";
         vhdl_record_type = "";
      }
   }
   WIZARD_SCRIPT_ARGUMENTS 
   {
      hdl_parameters 
      {
      }
   }
   SIMULATION 
   {
      DISPLAY 
      {
      }
   }
   SLAVE avalon_slave_0
   {
      SYSTEM_BUILDER_INFO 
      {
         Bus_Type = "avalon";
         Address_Group = "1";
         Has_Clock = "0";
         Address_Width = "2";
         Address_Alignment = "native";
         Data_Width = "16";
         Has_Base_Address = "1";
         Has_IRQ = "1";
         Setup_Time = "100ns";
         Hold_Time = "100ns";
         Read_Wait_States = "100ns";
         Write_Wait_States = "100ns";
         Read_Latency = "0";
         Maximum_Pending_Read_Transactions = "0";
         Active_CS_Through_Read_Latency = "0";
         Is_Printable_Device = "0";
         Is_Memory_Device = "0";
         Is_Readable = "1";
         Is_Writable = "1";
         Minimum_Uninterrupted_Run_Length = "1";
         MASTERED_BY cpu_0/data_master
         {
            priority = "1";
         }
         IRQ_MASTER cpu_0/data_master
         {
            IRQ_Number = "7";
         }
         Base_Address = "0x006810B0";
      }
      COMPONENT_BUILDER 
      {
         AVS_SETTINGS 
         {
            Setup_Value = "100";
            Read_Wait_Value = "100";
            Write_Wait_Value = "100";
            Hold_Value = "100";
            Timing_Units = "ns";
            Read_Latency_Value = "0";
            Minimum_Arbitration_Shares = "1";
            Active_CS_Through_Read_Latency = "0";
            Max_Pending_Read_Transactions_Value = "1";
            Address_Alignment = "native";
            Is_Printable_Device = "0";
            Interleave_Bursts = "0";
            interface_name = "Avalon Slave";
            external_wait = "0";
            Is_Memory_Device = "0";
         }
      }
      PORT_WIRING 
      {
         PORT iDATA
         {
            width = "16";
            width_expression = "";
            direction = "input";
            type = "writedata";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iADDR
         {
            width = "2";
            width_expression = "";
            direction = "input";
            type = "address";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iRD_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "read_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iWR_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "write_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iCS_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "chipselect_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iRST_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "reset_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT oDATA
         {
            width = "16";
            width_expression = "";
            direction = "output";
            type = "readdata";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT oINT0_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "irq_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT OTG_DATA
         {
            width = "16";
            width_expression = "";
            direction = "inout";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT OTG_ADDR
         {
            width = "2";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT OTG_RD_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT OTG_WR_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT OTG_CS_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT OTG_RST_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT OTG_INT0
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT OTG_INT1
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
      }
   }
   SLAVE avalon_slave_1
   {
      SYSTEM_BUILDER_INFO 
      {
         Bus_Type = "avalon";
         Address_Group = "2";
         Has_Clock = "0";
         Address_Width = "0";
         Address_Alignment = "native";
         Data_Width = "8";
         Has_Base_Address = "0";
         Has_IRQ = "1";
         Setup_Time = "0ns";
         Hold_Time = "0ns";
         Read_Wait_States = "1ns";
         Write_Wait_States = "1ns";
         Read_Latency = "0";
         Maximum_Pending_Read_Transactions = "0";
         Active_CS_Through_Read_Latency = "0";
         Is_Printable_Device = "0";
         Is_Memory_Device = "0";
         Is_Readable = "0";
         Is_Writable = "0";
         Minimum_Uninterrupted_Run_Length = "1";
         MASTERED_BY cpu_0/data_master
         {
            priority = "1";
         }
         IRQ_MASTER cpu_0/data_master
         {
            IRQ_Number = "8";
         }
      }
      COMPONENT_BUILDER 
      {
         AVS_SETTINGS 
         {
            Setup_Value = "0";
            Read_Wait_Value = "1";
            Write_Wait_Value = "1";
            Hold_Value = "0";
            Timing_Units = "ns";
            Read_Latency_Value = "0";
            Minimum_Arbitration_Shares = "1";
            Active_CS_Through_Read_Latency = "0";
            Max_Pending_Read_Transactions_Value = "1";
            Address_Alignment = "native";
            Is_Printable_Device = "0";
            Interleave_Bursts = "0";
            interface_name = "Avalon Slave";
            external_wait = "0";
            Is_Memory_Device = "0";
         }
      }
      PORT_WIRING 
      {
         PORT oINT1_N
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "irq_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
      }
   }
   HDL_INFO 
   {
      Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/ISP1362_IF.v, __PROJECT_DIRECTORY__/ISP1362.v";
   }
}
</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="sharedPorts">
      <type>[Ljava.lang.String;</type>
      <value></value>
      <derived>true</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>iCLK</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
    </interface>
    <interface name="avalon_slave_0_export" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>OTG_DATA</name>
        <direction>Bidir</direction>
        <width>16</width>
        <role>export</role>
      </port>
      <port>
        <name>OTG_ADDR</name>
        <direction>Output</direction>
        <width>2</width>
        <role>export</role>
      </port>
      <port>
        <name>OTG_RD_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>OTG_WR_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>OTG_CS_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>OTG_RST_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>OTG_INT0</name>
        <direction>Input</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>OTG_INT1</name>
        <direction>Input</direction>
        <width>1</width>
        <role>export</role>
      </port>
    </interface>
    <interface name="avalon_slave_0" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isMemoryDevice</name>
        <value>0</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isPrintableDevice</name>
        <value>0</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isNonVolatileStorage</name>
        <value>0</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>4</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>100</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>100</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>100</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>100</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Nanoseconds</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>100</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>100</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>iDATA</name>
        <direction>Input</direction>
        <width>16</width>
        <role>writedata</role>
      </port>
      <port>
        <name>iADDR</name>
        <direction>Input</direction>
        <width>2</width>
        <role>address</role>
      </port>
      <port>
        <name>iRD_N</name>
        <direction>Input</direction>
        <width>1</width>
        <role>read_n</role>
      </port>
      <port>
        <name>iWR_N</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>iCS_N</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect_n</role>
      </port>
      <port>
        <name>oDATA</name>
        <direction>Output</direction>
        <width>16</width>
        <role>readdata</role>
      </port>
    </interface>
    <interface name="avalon_slave_0_irq" kind="interrupt_sender" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="associatedAddressablePoint">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value>ISP1362.avalon_slave_0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="irqScheme">
        <type>com.altera.sopcmodel.interrupt.InterruptConnectionPoint$EIrqScheme</type>
        <value>NONE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>interrupt</type>
      <isStart>false</isStart>
      <port>
        <name>oINT0_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>irq_n</role>
      </port>
    </interface>
    <interface name="avalon_slave_1_irq" kind="interrupt_sender" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="associatedAddressablePoint">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value>ISP1362.avalon_slave_1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="irqScheme">
        <type>com.altera.sopcmodel.interrupt.InterruptConnectionPoint$EIrqScheme</type>
        <value>NONE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>interrupt</type>
      <isStart>false</isStart>
      <port>
        <name>oINT1_N</name>
        <direction>Output</direction>
        <width>1</width>
        <role>irq_n</role>
      </port>
    </interface>
  </module>
  <module name="VGA_0" kind="binary_vga_controller" version="1.0">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <parameter name="instancePTF">
      <type>com.altera.utilities.altNode.AltNode</type>
      <value>MODULE VGA_0
{
   class = "binary_vga_controller";
   class_version = "1.0";
   SYSTEM_BUILDER_INFO 
   {
      Instantiate_In_System_Module = "1";
      Has_Clock = "1";
      Top_Level_Ports_Are_Enumerated = "1";
      Is_Enabled = "1";
      Clock_Source = "clk";
      View 
      {
         MESSAGES 
         {
         }
         Is_Collapsed = "1";
      }
   }
   COMPONENT_BUILDER 
   {
      GLS_SETTINGS 
      {
      }
   }
   PORT_WIRING 
   {
      PORT iCLK
      {
         width = "1";
         width_expression = "";
         direction = "input";
         type = "clk";
         is_shared = "0";
         vhdl_record_name = "";
         vhdl_record_type = "";
      }
   }
   WIZARD_SCRIPT_ARGUMENTS 
   {
      hdl_parameters 
      {
         ram_size = "19'b1001011000000000000";
      }
   }
   SIMULATION 
   {
      DISPLAY 
      {
      }
   }
   SLAVE avalon_slave_0
   {
      SYSTEM_BUILDER_INFO 
      {
         Bus_Type = "avalon";
         Address_Group = "1";
         Has_Clock = "0";
         Address_Width = "19";
         Address_Alignment = "native";
         Data_Width = "16";
         Has_Base_Address = "1";
         Has_IRQ = "0";
         Setup_Time = "1cycles";
         Hold_Time = "1cycles";
         Read_Wait_States = "0cycles";
         Write_Wait_States = "0cycles";
         Read_Latency = "0";
         Maximum_Pending_Read_Transactions = "0";
         Active_CS_Through_Read_Latency = "0";
         Is_Printable_Device = "0";
         Is_Memory_Device = "0";
         Is_Readable = "1";
         Is_Writable = "1";
         Minimum_Uninterrupted_Run_Length = "1";
         Base_Address = "0x00400000";
         MASTERED_BY cpu_0/data_master
         {
            priority = "1";
         }
         IRQ_MASTER cpu_0/data_master
         {
            IRQ_Number = "NC";
         }
      }
      COMPONENT_BUILDER 
      {
         AVS_SETTINGS 
         {
            Setup_Value = "1";
            Read_Wait_Value = "0";
            Write_Wait_Value = "0";
            Hold_Value = "1";
            Timing_Units = "cycles";
            Read_Latency_Value = "0";
            Minimum_Arbitration_Shares = "1";
            Active_CS_Through_Read_Latency = "0";
            Max_Pending_Read_Transactions_Value = "1";
            Address_Alignment = "native";
            Is_Printable_Device = "0";
            Interleave_Bursts = "0";
            interface_name = "Avalon Slave";
            external_wait = "0";
            Is_Memory_Device = "0";
         }
      }
      PORT_WIRING 
      {
         PORT oDATA
         {
            width = "16";
            width_expression = "";
            direction = "output";
            type = "readdata";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iDATA
         {
            width = "16";
            width_expression = "";
            direction = "input";
            type = "writedata";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iADDR
         {
            width = "19";
            width_expression = "";
            direction = "input";
            type = "address";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iWR
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "write";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iRD
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "read";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iCS
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "chipselect";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iRST_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "reset_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT VGA_R
         {
            width = "10";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT VGA_G
         {
            width = "10";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT VGA_B
         {
            width = "10";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT VGA_HS
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT VGA_VS
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT VGA_SYNC
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT VGA_BLANK
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT VGA_CLK
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iCLK_25
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
      }
   }
   HDL_INFO 
   {
      Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/Img_DATA.hex,__PROJECT_DIRECTORY__/VGA_Param.h,__PROJECT_DIRECTORY__/Img_RAM.v,__PROJECT_DIRECTORY__/VGA_Controller.v,__PROJECT_DIRECTORY__/VGA_NIOS_CTRL.v,__PROJECT_DIRECTORY__/VGA_OSD_RAM.v, __PROJECT_DIRECTORY__/VGA_0.v";
   }
}
</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="sharedPorts">
      <type>[Ljava.lang.String;</type>
      <value></value>
      <derived>true</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>iCLK</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
    </interface>
    <interface name="avalon_slave_0_export" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>VGA_R</name>
        <direction>Output</direction>
        <width>10</width>
        <role>export</role>
      </port>
      <port>
        <name>VGA_G</name>
        <direction>Output</direction>
        <width>10</width>
        <role>export</role>
      </port>
      <port>
        <name>VGA_B</name>
        <direction>Output</direction>
        <width>10</width>
        <role>export</role>
      </port>
      <port>
        <name>VGA_HS</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>VGA_VS</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>VGA_SYNC</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>VGA_BLANK</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>VGA_CLK</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>iCLK_25</name>
        <direction>Input</direction>
        <width>1</width>
        <role>export</role>
      </port>
    </interface>
    <interface name="avalon_slave_0" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isMemoryDevice</name>
        <value>0</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isPrintableDevice</name>
        <value>0</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isNonVolatileStorage</name>
        <value>0</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>524288</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>oDATA</name>
        <direction>Output</direction>
        <width>16</width>
        <role>readdata</role>
      </port>
      <port>
        <name>iDATA</name>
        <direction>Input</direction>
        <width>16</width>
        <role>writedata</role>
      </port>
      <port>
        <name>iADDR</name>
        <direction>Input</direction>
        <width>19</width>
        <role>address</role>
      </port>
      <port>
        <name>iWR</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write</role>
      </port>
      <port>
        <name>iRD</name>
        <direction>Input</direction>
        <width>1</width>
        <role>read</role>
      </port>
      <port>
        <name>iCS</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
    </interface>
  </module>
  <module name="Audio_0" kind="audio_dac_fifo" version="1.0">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <parameter name="instancePTF">
      <type>com.altera.utilities.altNode.AltNode</type>
      <value>MODULE Audio_0
{
   class = "audio_dac_fifo";
   class_version = "1.0";
   SYSTEM_BUILDER_INFO 
   {
      Instantiate_In_System_Module = "1";
      Has_Clock = "1";
      Top_Level_Ports_Are_Enumerated = "1";
      Is_Enabled = "1";
      Clock_Source = "clk";
      View 
      {
         MESSAGES 
         {
         }
         Is_Collapsed = "1";
      }
   }
   COMPONENT_BUILDER 
   {
      GLS_SETTINGS 
      {
      }
   }
   PORT_WIRING 
   {
      PORT iWR_CLK
      {
         width = "1";
         width_expression = "";
         direction = "input";
         type = "clk";
         is_shared = "0";
         vhdl_record_name = "";
         vhdl_record_type = "";
      }
   }
   WIZARD_SCRIPT_ARGUMENTS 
   {
      hdl_parameters 
      {
         ref_clk = "18432000";
         sample_rate = "48000";
         data_width = "16";
         channel_num = "2";
      }
   }
   SIMULATION 
   {
      DISPLAY 
      {
      }
   }
   SLAVE avalon_slave_0
   {
      SYSTEM_BUILDER_INFO 
      {
         Bus_Type = "avalon";
         Address_Group = "1";
         Has_Clock = "0";
         Address_Width = "0";
         Address_Alignment = "native";
         Data_Width = "16";
         Has_Base_Address = "1";
         Has_IRQ = "0";
         Setup_Time = "0cycles";
         Hold_Time = "0cycles";
         Read_Wait_States = "0cycles";
         Write_Wait_States = "0cycles";
         Read_Latency = "0";
         Maximum_Pending_Read_Transactions = "0";
         Active_CS_Through_Read_Latency = "0";
         Is_Printable_Device = "0";
         Is_Memory_Device = "0";
         Is_Readable = "0";
         Is_Writable = "1";
         Minimum_Uninterrupted_Run_Length = "1";
         MASTERED_BY cpu_0/data_master
         {
            priority = "1";
         }
         Base_Address = "0x00681104";
         IRQ_MASTER cpu_0/data_master
         {
            IRQ_Number = "NC";
         }
      }
      COMPONENT_BUILDER 
      {
         AVS_SETTINGS 
         {
            Setup_Value = "0";
            Read_Wait_Value = "0";
            Write_Wait_Value = "0";
            Hold_Value = "0";
            Timing_Units = "cycles";
            Read_Latency_Value = "0";
            Minimum_Arbitration_Shares = "1";
            Active_CS_Through_Read_Latency = "0";
            Max_Pending_Read_Transactions_Value = "1";
            Address_Alignment = "native";
            Is_Printable_Device = "0";
            Interleave_Bursts = "0";
            interface_name = "Avalon Slave";
            external_wait = "0";
            Is_Memory_Device = "0";
         }
      }
      PORT_WIRING 
      {
         PORT iDATA
         {
            width = "16";
            width_expression = "((DATA_WIDTH - 1)) - (0) + 1";
            direction = "input";
            type = "writedata";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iWR
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "write";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT oDATA
         {
            width = "16";
            width_expression = "((DATA_WIDTH - 1)) - (0) + 1";
            direction = "output";
            type = "readdata";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT oAUD_DATA
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT oAUD_LRCK
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT oAUD_BCK
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT oAUD_XCK
         {
            width = "1";
            width_expression = "";
            direction = "output";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iCLK_18_4
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "export";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
         PORT iRST_N
         {
            width = "1";
            width_expression = "";
            direction = "input";
            type = "reset_n";
            is_shared = "0";
            vhdl_record_name = "";
            vhdl_record_type = "";
         }
      }
   }
   HDL_INFO 
   {
      Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/AUDIO_DAC_FIFO.v,__PROJECT_DIRECTORY__/FIFO_16_256.v, __PROJECT_DIRECTORY__/Audio_0.v";
   }
}
</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="sharedPorts">
      <type>[Ljava.lang.String;</type>
      <value></value>
      <derived>true</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>iWR_CLK</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
    </interface>
    <interface name="avalon_slave_0_export" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>oAUD_DATA</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>oAUD_LRCK</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>oAUD_BCK</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>oAUD_XCK</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>iCLK_18_4</name>
        <direction>Input</direction>
        <width>1</width>
        <role>export</role>
      </port>
    </interface>
    <interface name="avalon_slave_0" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isMemoryDevice</name>
        <value>0</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isPrintableDevice</name>
        <value>0</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isNonVolatileStorage</name>
        <value>0</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>iDATA</name>
        <direction>Input</direction>
        <width>16</width>
        <role>writedata</role>
      </port>
      <port>
        <name>iWR</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write</role>
      </port>
      <port>
        <name>oDATA</name>
        <direction>Output</direction>
        <width>16</width>
        <role>readdata</role>
      </port>
    </interface>
  </module>
  <module name="SD_DAT" kind="altera_avalon_pio" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DRIVEN_SIM_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_TRI</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_OUT</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_IN</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.CAPTURE</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DATA_WIDTH</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.RESET_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.EDGE_TYPE</name>
      <value>"NONE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.IRQ_TYPE</name>
      <value>"NONE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FREQ</name>
      <value>100000000u</value>
    </assignment>
    <parameter name="bitClearingEdgeCapReg">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="captureEdge">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="direction">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$Direction</type>
      <value>Bidir</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="edgeType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$EdgeType</type>
      <value>RISING</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="generateIRQ">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="irqType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$IrqType</type>
      <value>LEVEL</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="resetValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDoTestBenchWiring">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDrivenValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="width">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="s1" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>4</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>2</width>
        <role>address</role>
      </port>
      <port>
        <name>write_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>writedata</name>
        <direction>Input</direction>
        <width>1</width>
        <role>writedata</role>
      </port>
      <port>
        <name>chipselect</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
      <port>
        <name>readdata</name>
        <direction>Output</direction>
        <width>1</width>
        <role>readdata</role>
      </port>
    </interface>
    <interface name="external_connection" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>bidir_port</name>
        <direction>Bidir</direction>
        <width>1</width>
        <role>export</role>
      </port>
    </interface>
  </module>
  <module name="SD_CMD" kind="altera_avalon_pio" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DRIVEN_SIM_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_TRI</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_OUT</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_IN</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.CAPTURE</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DATA_WIDTH</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.RESET_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.EDGE_TYPE</name>
      <value>"NONE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.IRQ_TYPE</name>
      <value>"NONE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FREQ</name>
      <value>100000000u</value>
    </assignment>
    <parameter name="bitClearingEdgeCapReg">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="captureEdge">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="direction">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$Direction</type>
      <value>Bidir</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="edgeType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$EdgeType</type>
      <value>RISING</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="generateIRQ">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="irqType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$IrqType</type>
      <value>LEVEL</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="resetValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDoTestBenchWiring">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDrivenValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="width">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="s1" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>4</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>2</width>
        <role>address</role>
      </port>
      <port>
        <name>write_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>writedata</name>
        <direction>Input</direction>
        <width>1</width>
        <role>writedata</role>
      </port>
      <port>
        <name>chipselect</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
      <port>
        <name>readdata</name>
        <direction>Output</direction>
        <width>1</width>
        <role>readdata</role>
      </port>
    </interface>
    <interface name="external_connection" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>bidir_port</name>
        <direction>Bidir</direction>
        <width>1</width>
        <role>export</role>
      </port>
    </interface>
  </module>
  <module name="SD_CLK" kind="altera_avalon_pio" version="8.1">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <assignment>
      <name>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DRIVEN_SIM_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_TRI</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_OUT</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.HAS_IN</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.CAPTURE</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</name>
      <value>0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.DATA_WIDTH</name>
      <value>1</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.RESET_VALUE</name>
      <value>0x0</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.EDGE_TYPE</name>
      <value>"NONE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.IRQ_TYPE</name>
      <value>"NONE"</value>
    </assignment>
    <assignment>
      <name>embeddedsw.CMacro.FREQ</name>
      <value>100000000u</value>
    </assignment>
    <parameter name="bitClearingEdgeCapReg">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="captureEdge">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="direction">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$Direction</type>
      <value>Output</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="edgeType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$EdgeType</type>
      <value>RISING</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="generateIRQ">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="irqType">
      <type>com.altera.sopcmodel.components.avalon.AlteraAvalonPIO.AlteraAvalonPIO$IrqType</type>
      <value>LEVEL</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="resetValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDoTestBenchWiring">
      <type>boolean</type>
      <value>false</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="simDrivenValue">
      <type>long</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>false</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="width">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <interface name="clk" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
      <port>
        <name>reset_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset_n</role>
      </port>
    </interface>
    <interface name="s1" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>NATIVE</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>4</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>address</name>
        <direction>Input</direction>
        <width>2</width>
        <role>address</role>
      </port>
      <port>
        <name>write_n</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write_n</role>
      </port>
      <port>
        <name>writedata</name>
        <direction>Input</direction>
        <width>1</width>
        <role>writedata</role>
      </port>
      <port>
        <name>chipselect</name>
        <direction>Input</direction>
        <width>1</width>
        <role>chipselect</role>
      </port>
    </interface>
    <interface name="external_connection" kind="conduit" version="7.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>true</isStart>
      <port>
        <name>out_port</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
    </interface>
  </module>
  <module name="camera" kind="CAMERA_IF" version="1.0">
    <!-- Describes a single module. Module parameters are
the requested settings for a module instance. -->
    <interface name="s1" kind="avalon_slave" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <assignment>
        <name>embeddedsw.configuration.isFlash</name>
        <value>0</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isMemoryDevice</name>
        <value>0</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isNonVolatileStorage</name>
        <value>0</value>
      </assignment>
      <assignment>
        <name>embeddedsw.configuration.isPrintableDevice</name>
        <value>0</value>
      </assignment>
      <parameter name="addressAlignment">
        <type>com.altera.sopcmodel.avalon.AvalonConnectionPoint$AddressAlignment</type>
        <value>DYNAMIC</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressGroup">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="addressSpan">
        <type>long</type>
        <value>16</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="alwaysBurstMaxBurst">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="bridgesToMaster">
        <type>com.altera.entityinterfaces.IConnectionPoint</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="burstOnBurstBoundariesOnly">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="holdTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="interleaveBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isBigEndian">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isFlash">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isMemoryDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="isNonVolatileStorage">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="linewrapBursts">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="maximumPendingReadTransactions">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>false</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="minimumUninterruptedRunLength">
        <type>int</type>
        <value>1</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="printableDevice">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="readWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerIncomingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="registerOutgoingSignals">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="setupTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="timingUnits">
        <type>com.altera.sopcmodel.avalon.TimingUnits</type>
        <value>Cycles</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="transparentBridge">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="wellBehavedWaitrequest">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeLatency">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitStates">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="writeWaitTime">
        <type>int</type>
        <value>0</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>true</visible>
        <valid>true</valid>
      </parameter>
      <type>avalon</type>
      <isStart>false</isStart>
      <port>
        <name>avs_s1_address</name>
        <direction>Input</direction>
        <width>2</width>
        <role>address</role>
      </port>
      <port>
        <name>avs_s1_readdata</name>
        <direction>Output</direction>
        <width>32</width>
        <role>readdata</role>
      </port>
      <port>
        <name>avs_s1_read</name>
        <direction>Input</direction>
        <width>1</width>
        <role>read</role>
      </port>
      <port>
        <name>avs_s1_writedata</name>
        <direction>Input</direction>
        <width>32</width>
        <role>writedata</role>
      </port>
      <port>
        <name>avs_s1_write</name>
        <direction>Input</direction>
        <width>1</width>
        <role>write</role>
      </port>
    </interface>
    <interface name="s1_export" kind="conduit_end" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <type>conduit</type>
      <isStart>false</isStart>
      <port>
        <name>avs_s1_export_clk</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>avs_s1_export_address</name>
        <direction>Output</direction>
        <width>2</width>
        <role>export</role>
      </port>
      <port>
        <name>avs_s1_export_readdata</name>
        <direction>Input</direction>
        <width>32</width>
        <role>export</role>
      </port>
      <port>
        <name>avs_s1_export_read</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>avs_s1_export_writedata</name>
        <direction>Output</direction>
        <width>32</width>
        <role>export</role>
      </port>
      <port>
        <name>avs_s1_export_write</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
      <port>
        <name>avs_s1_export_reset</name>
        <direction>Output</direction>
        <width>1</width>
        <role>export</role>
      </port>
    </interface>
    <interface name="s1_clock" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>avs_s1_clk</name>
        <direction>Input</direction>
        <width>1</width>
        <role>clk</role>
      </port>
    </interface>
    <interface name="s1_clock_reset" kind="clock_sink" version="8.1">
      <!-- The connection points exposed by a module instance for the
particular module parameters. Connection points and their
parameters are a RESULT of the module parameters. -->
      <parameter name="clockRate">
        <type>long</type>
        <value>100000000</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="clockRateKnown">
        <type>boolean</type>
        <value>true</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="externallyDriven">
        <type>boolean</type>
        <value>false</value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <parameter name="ptfSchematicName">
        <type>java.lang.String</type>
        <value></value>
        <derived>false</derived>
        <enabled>true</enabled>
        <visible>false</visible>
        <valid>true</valid>
      </parameter>
      <type>clock</type>
      <isStart>false</isStart>
      <port>
        <name>avs_s1_reset</name>
        <direction>Input</direction>
        <width>1</width>
        <role>reset</role>
      </port>
    </interface>
  </module>
  <connection
      name="clk.clk/cpu_0.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="cpu_0.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>cpu_0</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/tri_state_bridge_0.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="tri_state_bridge_0.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>tri_state_bridge_0</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/cfi_flash_0.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="cfi_flash_0.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>cfi_flash_0</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/epcs_controller.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="epcs_controller.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>epcs_controller</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/jtag_uart.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="jtag_uart.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>jtag_uart</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/uart.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="uart.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>uart</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/timer_0.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="timer_0.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>timer_0</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/timer_1.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="timer_1.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>timer_1</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/lcd.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="lcd.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>lcd</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/led_red.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="led_red.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>led_red</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/led_green.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="led_green.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>led_green</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/button_pio.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="button_pio.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>button_pio</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/switch_pio.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="switch_pio.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>switch_pio</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/ssram.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="ssram.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>ssram</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/DM9000A.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="DM9000A.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>DM9000A</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/ISP1362.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="ISP1362.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>ISP1362</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/VGA_0.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="VGA_0.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>VGA_0</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/Audio_0.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="Audio_0.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>Audio_0</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/SD_DAT.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="SD_DAT.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>SD_DAT</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/SD_CMD.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="SD_CMD.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>SD_CMD</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/SD_CLK.clk"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="SD_CLK.clk">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>SD_CLK</endModule>
    <endConnectionPoint>clk</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.instruction_master/cpu_0.jtag_debug_module"
      kind="avalon"
      version="6.1"
      start="cpu_0.instruction_master"
      end="cpu_0.jtag_debug_module">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00680000</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>instruction_master</startConnectionPoint>
    <endModule>cpu_0</endModule>
    <endConnectionPoint>jtag_debug_module</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/cpu_0.jtag_debug_module"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="cpu_0.jtag_debug_module">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00680000</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>cpu_0</endModule>
    <endConnectionPoint>jtag_debug_module</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.instruction_master/tri_state_bridge_0.avalon_slave"
      kind="avalon"
      version="6.1"
      start="cpu_0.instruction_master"
      end="tri_state_bridge_0.avalon_slave">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x0000</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>instruction_master</startConnectionPoint>
    <endModule>tri_state_bridge_0</endModule>
    <endConnectionPoint>avalon_slave</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/tri_state_bridge_0.avalon_slave"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="tri_state_bridge_0.avalon_slave">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x0000</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>tri_state_bridge_0</endModule>
    <endConnectionPoint>avalon_slave</endConnectionPoint>
  </connection>
  <connection
      name="tri_state_bridge_0.tristate_master/cfi_flash_0.s1"
      kind="avalon_tristate"
      version="8.1"
      start="tri_state_bridge_0.tristate_master"
      end="cfi_flash_0.s1">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x0000</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>tri_state_bridge_0</startModule>
    <startConnectionPoint>tristate_master</startConnectionPoint>
    <endModule>cfi_flash_0</endModule>
    <endConnectionPoint>s1</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.instruction_master/epcs_controller.epcs_control_port"
      kind="avalon"
      version="6.1"
      start="cpu_0.instruction_master"
      end="epcs_controller.epcs_control_port">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00680800</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>instruction_master</startConnectionPoint>
    <endModule>epcs_controller</endModule>
    <endConnectionPoint>epcs_control_port</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/epcs_controller.epcs_control_port"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="epcs_controller.epcs_control_port">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00680800</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>epcs_controller</endModule>
    <endConnectionPoint>epcs_control_port</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.d_irq/epcs_controller.irq"
      kind="interrupt"
      version="8.1"
      start="cpu_0.d_irq"
      end="epcs_controller.irq">
    <parameter name="irqNumber">
      <type>int</type>
      <value>0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>d_irq</startConnectionPoint>
    <endModule>epcs_controller</endModule>
    <endConnectionPoint>irq</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/jtag_uart.avalon_jtag_slave"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="jtag_uart.avalon_jtag_slave">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x006810f0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>jtag_uart</endModule>
    <endConnectionPoint>avalon_jtag_slave</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.d_irq/jtag_uart.irq"
      kind="interrupt"
      version="8.1"
      start="cpu_0.d_irq"
      end="jtag_uart.irq">
    <parameter name="irqNumber">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>d_irq</startConnectionPoint>
    <endModule>jtag_uart</endModule>
    <endConnectionPoint>irq</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/uart.s1"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="uart.s1">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00681000</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>uart</endModule>
    <endConnectionPoint>s1</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.d_irq/uart.irq"
      kind="interrupt"
      version="8.1"
      start="cpu_0.d_irq"
      end="uart.irq">
    <parameter name="irqNumber">
      <type>int</type>
      <value>2</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>d_irq</startConnectionPoint>
    <endModule>uart</endModule>
    <endConnectionPoint>irq</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/timer_0.s1"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="timer_0.s1">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00681020</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>timer_0</endModule>
    <endConnectionPoint>s1</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.d_irq/timer_0.irq"
      kind="interrupt"
      version="8.1"
      start="cpu_0.d_irq"
      end="timer_0.irq">
    <parameter name="irqNumber">
      <type>int</type>
      <value>3</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>d_irq</startConnectionPoint>
    <endModule>timer_0</endModule>
    <endConnectionPoint>irq</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/timer_1.s1"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="timer_1.s1">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00681040</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>timer_1</endModule>
    <endConnectionPoint>s1</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.d_irq/timer_1.irq"
      kind="interrupt"
      version="8.1"
      start="cpu_0.d_irq"
      end="timer_1.irq">
    <parameter name="irqNumber">
      <type>int</type>
      <value>4</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>d_irq</startConnectionPoint>
    <endModule>timer_1</endModule>
    <endConnectionPoint>irq</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/lcd.control_slave"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="lcd.control_slave">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00681060</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>lcd</endModule>
    <endConnectionPoint>control_slave</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/led_red.s1"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="led_red.s1">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00681070</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>led_red</endModule>
    <endConnectionPoint>s1</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/led_green.s1"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="led_green.s1">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00681080</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>led_green</endModule>
    <endConnectionPoint>s1</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/button_pio.s1"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="button_pio.s1">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00681090</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>button_pio</endModule>
    <endConnectionPoint>s1</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.d_irq/button_pio.irq"
      kind="interrupt"
      version="8.1"
      start="cpu_0.d_irq"
      end="button_pio.irq">
    <parameter name="irqNumber">
      <type>int</type>
      <value>5</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>d_irq</startConnectionPoint>
    <endModule>button_pio</endModule>
    <endConnectionPoint>irq</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/switch_pio.s1"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="switch_pio.s1">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x006810a0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>switch_pio</endModule>
    <endConnectionPoint>s1</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.instruction_master/ssram.avalon_slave_0"
      kind="avalon"
      version="6.1"
      start="cpu_0.instruction_master"
      end="ssram.avalon_slave_0">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00600000</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>instruction_master</startConnectionPoint>
    <endModule>ssram</endModule>
    <endConnectionPoint>avalon_slave_0</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/ssram.avalon_slave_0"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="ssram.avalon_slave_0">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00600000</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>ssram</endModule>
    <endConnectionPoint>avalon_slave_0</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/DM9000A.avalon_slave_0"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="DM9000A.avalon_slave_0">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x006810f8</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>DM9000A</endModule>
    <endConnectionPoint>avalon_slave_0</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.d_irq/DM9000A.avalon_slave_0_irq"
      kind="interrupt"
      version="8.1"
      start="cpu_0.d_irq"
      end="DM9000A.avalon_slave_0_irq">
    <parameter name="irqNumber">
      <type>int</type>
      <value>6</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>d_irq</startConnectionPoint>
    <endModule>DM9000A</endModule>
    <endConnectionPoint>avalon_slave_0_irq</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/ISP1362.avalon_slave_0"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="ISP1362.avalon_slave_0">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x006810b0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>ISP1362</endModule>
    <endConnectionPoint>avalon_slave_0</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.d_irq/ISP1362.avalon_slave_0_irq"
      kind="interrupt"
      version="8.1"
      start="cpu_0.d_irq"
      end="ISP1362.avalon_slave_0_irq">
    <parameter name="irqNumber">
      <type>int</type>
      <value>7</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>d_irq</startConnectionPoint>
    <endModule>ISP1362</endModule>
    <endConnectionPoint>avalon_slave_0_irq</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.d_irq/ISP1362.avalon_slave_1_irq"
      kind="interrupt"
      version="8.1"
      start="cpu_0.d_irq"
      end="ISP1362.avalon_slave_1_irq">
    <parameter name="irqNumber">
      <type>int</type>
      <value>8</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>d_irq</startConnectionPoint>
    <endModule>ISP1362</endModule>
    <endConnectionPoint>avalon_slave_1_irq</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/VGA_0.avalon_slave_0"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="VGA_0.avalon_slave_0">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00400000</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>VGA_0</endModule>
    <endConnectionPoint>avalon_slave_0</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/Audio_0.avalon_slave_0"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="Audio_0.avalon_slave_0">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00681104</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>Audio_0</endModule>
    <endConnectionPoint>avalon_slave_0</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/SD_DAT.s1"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="SD_DAT.s1">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x006810c0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>SD_DAT</endModule>
    <endConnectionPoint>s1</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/SD_CMD.s1"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="SD_CMD.s1">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x006810d0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>SD_CMD</endModule>
    <endConnectionPoint>s1</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/SD_CLK.s1"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="SD_CLK.s1">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x006810e0</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>SD_CLK</endModule>
    <endConnectionPoint>s1</endConnectionPoint>
  </connection>
  <connection
      name="cpu_0.data_master/camera.s1"
      kind="avalon"
      version="6.1"
      start="cpu_0.data_master"
      end="camera.s1">
    <parameter name="arbitrationPriority">
      <type>int</type>
      <value>1</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <parameter name="baseAddress">
      <type>long</type>
      <value>0x00681110</value>
      <derived>false</derived>
      <enabled>true</enabled>
      <visible>true</visible>
      <valid>true</valid>
    </parameter>
    <startModule>cpu_0</startModule>
    <startConnectionPoint>data_master</startConnectionPoint>
    <endModule>camera</endModule>
    <endConnectionPoint>s1</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/camera.s1_clock_reset"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="camera.s1_clock_reset">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>camera</endModule>
    <endConnectionPoint>s1_clock_reset</endConnectionPoint>
  </connection>
  <connection
      name="clk.clk/camera.s1_clock"
      kind="clock"
      version="8.1"
      start="clk.clk"
      end="camera.s1_clock">
    <startModule>clk</startModule>
    <startConnectionPoint>clk</startConnectionPoint>
    <endModule>camera</endModule>
    <endConnectionPoint>s1_clock</endConnectionPoint>
  </connection>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>audio_dac_fifo</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>AUDIO_DAC_FIFO</displayName>
    <version>1.0</version>
  </plugin>
  <plugin>
    <instanceCount>22</instanceCount>
    <name>clock_sink</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Clock Input</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>2</instanceCount>
    <name>altera_avalon_timer</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>Interval Timer</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>26</instanceCount>
    <name>avalon</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IConnection</subtype>
    <displayName>Avalon Memory Mapped Connection</displayName>
    <version>6.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>avalon_tristate_master</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Avalon Memory Mapped Tristate Master</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>altera_avalon_uart</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>UART (RS-232 Serial Port)</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>9</instanceCount>
    <name>interrupt</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IConnection</subtype>
    <displayName>Interrupt Connection</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>2</instanceCount>
    <name>clock_source</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>Clock Source</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>altera_avalon_lcd_16207</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>Character LCD</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>altera_avalon_epcs_flash_controller</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>EPCS Serial Flash Controller</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>2</instanceCount>
    <name>clock_sink</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Clock Input</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>altera_avalon_tri_state_bridge</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>Avalon-MM Tristate Bridge</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>15</instanceCount>
    <name>conduit</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Conduit Endpoint</displayName>
    <version>7.1</version>
  </plugin>
  <plugin>
    <instanceCount>21</instanceCount>
    <name>avalon_slave</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Avalon Memory Mapped Slave</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>nios_custom_instruction_master</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Custom Instruction Master</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>2</instanceCount>
    <name>avalon_master</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Avalon Memory Mapped Master</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>isp1362</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>ISP1362</displayName>
    <version>1.0</version>
  </plugin>
  <plugin>
    <instanceCount>2</instanceCount>
    <name>clock_source</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Clock Output</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>CAMERA_IF</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>CAMERA_IF</displayName>
    <version>1.0</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>altera_nios2</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>Nios II Processor</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>dm9000a</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>DM9000A</displayName>
    <version>1.0</version>
  </plugin>
  <plugin>
    <instanceCount>24</instanceCount>
    <name>clock</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IConnection</subtype>
    <displayName>Clock Connection</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>seg7_lut_8</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>SEG7_LUT_8</displayName>
    <version>1.0</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>avalon_slave</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Avalon Memory Mapped Slave</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>altera_avalon_jtag_uart</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>JTAG UART</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>sram_16bit_512k</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>SRAM_16Bit_512K</displayName>
    <version>1.0</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>avalon_tristate_slave</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Avalon Memory Mapped Tristate Slave</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>binary_vga_controller</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>Binary_VGA_Controller</displayName>
    <version>1.0</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>avalon_tristate</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IConnection</subtype>
    <displayName>Avalon Memory Mapped Tristate Connection</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>9</instanceCount>
    <name>interrupt_sender</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Interrupt Sender</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>7</instanceCount>
    <name>altera_avalon_pio</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>PIO (Parallel I/O)</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>interrupt_receiver</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Interrupt Receiver</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>altera_avalon_cfi_flash</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IModule</subtype>
    <displayName>Flash Memory (CFI)</displayName>
    <version>8.1</version>
  </plugin>
  <plugin>
    <instanceCount>1</instanceCount>
    <name>conduit_end</name>
    <type>com.altera.entityinterfaces.IElementClass</type>
    <subtype>com.altera.entityinterfaces.IMutableConnectionPoint</subtype>
    <displayName>Conduit</displayName>
    <version>8.1</version>
  </plugin>
  <reportVersion>8.1 163</reportVersion>
  <uniqueIdentifier>001C2514D6DE000001306AAE9F86</uniqueIdentifier>
</EnsembleReport>
