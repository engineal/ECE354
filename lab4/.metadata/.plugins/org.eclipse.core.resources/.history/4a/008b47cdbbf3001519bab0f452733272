#include "ip.h"
#include "ethernet.h"
#include "basic_io.h"
#include "layers/IP_layer.h"

int ipSend(
    char* data, int length,
    char* destIP, char* localIP,
    char* destMAC, char* localMAC)
{
    IPFrame ipFrame;
    fillIPHeader(&ipFrame, 4, 1, localIP, destIP, data, length); //fills IP header with default values
    //printIPHeader(&ipFrame);
    unsigned char IPData[IP_HEADER_LENGTH + length];
    int IPLength = IPPack(&ipFrame, IPData);
    
    return ethernetSend(IPData, IPLength, destMAC, localMAC);
}
    
int ipReceive(
    char* returnedData,
    char* localIP,
    char* localMAC)
{
    unsigned char data[68];
    int dataLength = ethernetReceive(data, localMAC);
    if (dataLength > 0) {
        IPFrame ipFrame;
        ipFrame.data = returnedData;
        if (IPUnpack(data, &ipFrame, localIP)) {
            //printIPHeader(&ipFrame);
            return ipFrame.dataLength;
        }
    }
    return -1;
}
