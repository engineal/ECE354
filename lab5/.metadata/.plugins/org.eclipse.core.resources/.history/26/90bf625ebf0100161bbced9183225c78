#include "udp.h"
#include "basic_io.h"
#include "helper.h"

// creates and transmits packet
void udpSend(
    char* data, 
    int length, 
    UDPInfo* info) 
{
    UDPFrame frame;
    fillUDPHeader(&frame, info->localPort, info->destPort, data, length);
    printUDPHeader(&frame);
    unsigned char output[UDP_HEADER_LENGTH + length];
    int outputLength = UDPPack(&frame, output);
    
    printf("UDP Sent %d bytes\n", outputLength);
    ipSend(output, outputLength, info->destIP, info->localIP, info->destMAC, info->localMAC);
}

// receives and decodes packet
int udpReceive(
    char* returnedData, 
    UDPInfo* info) 
{
    unsigned char data[UDP_LENGTH];
    int dataLength = ipReceive(data, info->localIP, info->localMAC);
    if (dataLength > 0) {
        printf("UDP Received %d bytes\n", dataLength);
        UDPFrame frame;
        frame.data = returnedData;
        UDPUnpack(data, &frame);
        //printUDPHeader(&frame);

        int i;
        for (i = 0; i < dataLength; i++) {
            if(i%8 == 0)
                printf("\n");
            printf("0x%2X,", data[i]);
        }
        printf("\n");
        int checksum = computeChecksum(data, dataLength);

        if (frame.checksum != checksum) {
            printf("UDP Checksum fail: %x != %x\n", frame.checksum, checksum);
        } else if (frame.destPort != info->localPort) {
            printf("Port fail: %d != %d\n", frame.destPort, info->localPort);
        } else {
            return frame.dataLength;
        }
    }
    return -1;
}
