#include "udp.h"
#include "ip.h"
#include "basic_io.h"
#include "layers/ethernet_layer.h"

// creates and transmits packet
void udpSend(
    char* data, 
    int length, 
    EthernetInfo* info) 
{
    printf("Sent: %s\n", data);
    
    UDPFrame udpFrame;
    fillUDPHeader(&udpFrame, info->localPort, info->destPort, data, valueSize); //fills IP header with default values
    //printUDPHeader(&udpFrame);
    unsigned char UDPData[UDP_HEADER_LENGTH + valueSize];
    int UDPLength = UDPPack(&udpFrame, UDPData);
    
    ipSend(UDPData, UDPLength, info->destIP, info->localIP, info->destMac, info->localMac);
}

// receives and decodes packet
int udpReceive(
    char* returnedData, 
    EthernetInfo* info) 
{
    unsigned char data[68];
    int dataLength = ethernetReceive(data, info->localIP, info->localMAC);
    if (dataLength > 0) {
        UDPFrame udpFrame;
        udpFrame.data = returnedData;
        if (UDPUnpack(data, &udpFrame, info->localPort)) {
            //printUDPHeader(&udpFrame);
            return udpFrame.;
        }
    } else {
        return -1;
    }
}
